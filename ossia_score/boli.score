{"Document":{"ObjectName":"Scenario::ScenarioDocumentModel","id":1,"BaseScenario":{"ObjectName":"Scenario::BaseScenario","id":0,"Constraint":{"ObjectName":"Scenario::IntervalModel","id":0,"Metadata":{"ScriptingName":"boli","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":38,"Metadata":{"ScriptingName":"Flip V","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":10584000000,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[-37.5,-11.0],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Geometry Adjustment\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t}\n\t]\n}*/\n\nvoid main() {\n\tvec2\t\tnormSrcCoord;\n\n\tnormSrcCoord.x = isf_FragNormCoord[0];\n\tnormSrcCoord.y = isf_FragNormCoord[1];\n\n\tnormSrcCoord.y = (1.0-normSrcCoord.y);\n\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage, normSrcCoord);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false,"Address":"lightwarrior:/"}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"de035912-5b03-49a8-bc4d-b2cba68e21d9","ObjectName":"Scenario","id":1,"Metadata":{"ScriptingName":"Scenario.1","Comment":"","Color":"Transparent1","Label":"","Touched":false},"Duration":10584000000,"Height":1500.0,"StartOffset":0,"LoopDuration":10584000000,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":false,"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"In","Exposed":"in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"StartTimeNodeId":0,"StartEventId":0,"StartStateId":0,"Exclusive":false,"TimeNodes":[{"ObjectName":"Scenario::TimeSyncModel","id":2,"Metadata":{"ScriptingName":"Sync.ritz49","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":12700800000,"Events":[2],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.andy41","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":323649148,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "}],"Events":[{"ObjectName":"Scenario::EventModel","id":2,"Metadata":{"ScriptingName":"Event.have39","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":2,"States":[3,4],"Condition":"","Date":12700800000,"Offset":0},{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.daze96","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[2,5],"Condition":"","Date":323649148,"Offset":0},{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0,1],"Condition":"","Date":0,"Offset":0}],"States":[{"ObjectName":"Scenario::StateModel","id":5,"Metadata":{"ScriptingName":"State.lids67","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":3,"NextConstraint":null,"HeightPercentage":0.07666666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":4,"Metadata":{"ScriptingName":"State.papa89","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":2,"PreviousConstraint":null,"NextConstraint":3,"HeightPercentage":0.07666666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":3,"Metadata":{"ScriptingName":"State.each78","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":2,"PreviousConstraint":2,"NextConstraint":null,"HeightPercentage":0.08066666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":2,"Metadata":{"ScriptingName":"State.doom62","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":1,"NextConstraint":2,"HeightPercentage":0.08066666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.trio59","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":1,"HeightPercentage":0.08066666666666666,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":null,"HeightPercentage":0.02,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}],"Constraints":[{"ObjectName":"Scenario::IntervalModel","id":3,"Metadata":{"ScriptingName":"Interval.trag20","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Graphal":true,"DefaultDuration":0,"MinDuration":0,"MaxDuration":0,"GuiDuration":0,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"StartState":4,"EndState":5,"StartDate":7379649148,"HeightPercentage":0.07666666666666666},{"ObjectName":"Scenario::IntervalModel","id":2,"Metadata":{"ScriptingName":"Video Mixer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":38,"Metadata":{"ScriptingName":"Flip V.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[52.554314010876624,-311.6740802492486],"Size":[115.6875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Geometry Adjustment\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t}\n\t]\n}*/\n\nvoid main() {\n\tvec2\t\tnormSrcCoord;\n\n\tnormSrcCoord.x = isf_FragNormCoord[0];\n\tnormSrcCoord.y = isf_FragNormCoord[1];\n\n\tnormSrcCoord.y = (1.0-normSrcCoord.y);\n\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage, normSrcCoord);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false,"Address":"Lightwarrior Layer Two:/"}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":34,"Metadata":{"ScriptingName":"Strobe","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[2272.972636036767,127.2750289447764],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"CATEGORIES\" : [\n    \"Color Effect\"\n  ],\n  \"DESCRIPTION\" : \"\",\n  \"ISFVSN\" : \"2\",\n  \"INPUTS\" : [\n    {\n      \"NAME\" : \"inputImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"NAME\" : \"strobeRate\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 1,\n      \"DEFAULT\" : 0,\n      \"LABEL\" : \"Strobe Rate\",\n      \"MIN\" : 0\n    },\n    {\n      \"LABELS\" : [\n        \"Invert\",\n        \"Color\"\n      ],\n      \"NAME\" : \"strobeMode\",\n      \"TYPE\" : \"long\",\n      \"LABEL\" : \"Strobe Mode\",\n      \"VALUES\" : [\n        0,\n        1\n      ]\n    },\n    {\n      \"NAME\" : \"strobeColor\",\n      \"TYPE\" : \"color\",\n      \"DEFAULT\" : [\n        1,\n        1,\n        1,\n        1\n      ],\n      \"LABEL\" : \"Strobe Color\"\n    }\n  ],\n  \"PASSES\" : [\n    {\n      \"WIDTH\" : \"1\",\n      \"DESCRIPTION\" : \"this buffer stores the last frame's time offset in the first component of its only pixel- note that it's requesting a FLOAT target buffer...\",\n      \"HEIGHT\" : \"1\",\n      \"TARGET\" : \"lastState\",\n      \"PERSISTENT\" : true\n    },\n    {\n\n    }\n  ],\n  \"CREDIT\" : \"by VIDVOX\"\n}\n*/\n\n\n\nvoid main()\n{\n\t//\tif this is the first pass, i'm going to read the position from the \"lastPosition\" image, and write a new position based on this and the hold variables\n\tif (PASSINDEX == 0)\t{\n\t\tvec4\t\tsrcPixel = IMG_PIXEL(lastState,vec2(0.5));\n\t\t//\ti'm only using the X, which is the last render time we reset\n\t\tif (strobeRate == 0.0)\t{\n\t\t\tsrcPixel.r = (srcPixel.r == 0.0) ? 1.0 : 0.0;\n\t\t}\n\t\telse\t{\n\t\t\tsrcPixel.r = (mod(TIME, strobeRate) <= strobeRate / 2.0) ? 1.0 : 0.0;\n\t\t}\n\t\tgl_FragColor = srcPixel;\n\t}\n\t//\telse this isn't the first pass- read the position value from the buffer which stores it\n\telse\t{\n\t\tvec4 lastStateVector = IMG_PIXEL(lastState,vec2(0.5));\n\t\tvec4 srcPixel = IMG_THIS_PIXEL(inputImage);\n\t\t//\tinvert or flash a color?\n\t\tif (strobeMode == 0)\t{\n\t\t\tsrcPixel = (lastStateVector.r == 0.0) ? srcPixel : vec4(1.0-srcPixel.r, 1.0-srcPixel.g, 1.0-srcPixel.b, srcPixel.a);\n\t\t}\n\t\telse if (strobeMode == 1)\t{\n\t\t\tsrcPixel = (lastStateVector.r == 0.0) ? srcPixel : strobeColor;\n\t\t}\n\t\tgl_FragColor = srcPixel;\n\t}\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"strobeRate","Exposed":"stroberate","Address":"osc (boli):/artnet/ch/22","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"strobeMode","Exposed":"strobemode","Value":{"Int":1},"Domain":{"Int":{"Values":[0,1]}},"Values":[["Invert",{"Int":0}],["Color",{"Int":1}]]},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"strobeColor","Exposed":"strobecolor","Value":{"Vec4f":[1.0,1.0,1.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":32,"Metadata":{"ScriptingName":"Fade.7","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[2490.700636036767,-197.5889710552234],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/5","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false,"Address":"Window:/"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":31,"Metadata":{"ScriptingName":"RGB EQ","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[2081.968133237031,-220.57162464194343],"Size":[80.296875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Color Adjustment\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"red\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 2.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"green\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 2.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"blue\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 2.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"gain\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": -1.0,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.0\n\t\t}\n\t]\n}*/\n\n\n\n\nvoid main() {\n\tvec4\tpixel = IMG_THIS_PIXEL(inputImage);\t\n\tfloat\tbrightness = (pixel.r * red + pixel.g * green + pixel.b * blue) / 3.0;\n\t\n\tpixel.r = pixel.r * red;\n\tpixel.g = pixel.g * green;\n\tpixel.b = pixel.b * blue;\n\n\tif (gain >= 0.0)\t{\n\t\tpixel.a = (brightness >= gain) ? pixel.a : 0.0;\n\t}\n\telse\t{\n\t\tpixel.a = (brightness <= 1.0-abs(gain)) ? pixel.a : 0.0;\n\t}\n\tgl_FragColor = pixel;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"red","Exposed":"red","Address":"osc (boli):/artnet/ch/1","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"green","Exposed":"green","Address":"osc (boli):/artnet/ch/2","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"blue","Exposed":"blue","Address":"osc (boli):/artnet/ch/3","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"gain","Exposed":"gain","Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":30,"Metadata":{"ScriptingName":"Fade.6","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1858.2526360367672,-225.2369710552235],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/20","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":29,"Metadata":{"ScriptingName":"Fade.5","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1692.3646360367677,-214.86897105522348],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/19","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":28,"Metadata":{"ScriptingName":"Fade.4","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1500.5566360367677,-214.8689710552236],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/18","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":27,"Metadata":{"ScriptingName":"Fade.3","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1294.9246360367674,-226.96497105522351],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/17","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":26,"Metadata":{"ScriptingName":"Fade.2","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1129.0366360367673,-218.32497105522356],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/16","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":25,"Metadata":{"ScriptingName":"Fade.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[966.6046360367674,-211.41297105522352],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/15","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":24,"Metadata":{"ScriptingName":"Sketch","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1949.8366360367672,13.227028944776292],"Size":[75.0,22.0],"Loops":false,"Vertex":"#if __VERSION__ <= 120\nvarying vec2 left_coord;\nvarying vec2 right_coord;\nvarying vec2 above_coord;\nvarying vec2 below_coord;\n\nvarying vec2 lefta_coord;\nvarying vec2 righta_coord;\nvarying vec2 leftb_coord;\nvarying vec2 rightb_coord;\n#else\nout vec2 left_coord;\nout vec2 right_coord;\nout vec2 above_coord;\nout vec2 below_coord;\n\nout vec2 lefta_coord;\nout vec2 righta_coord;\nout vec2 leftb_coord;\nout vec2 rightb_coord;\n#endif\n\n\nvoid main()\n{\n\tisf_vertShaderInit();\n\tvec2 texc = vec2(isf_FragNormCoord[0],isf_FragNormCoord[1]);\n\tvec2 d = 1.0/RENDERSIZE;\n\t\n\tleft_coord = clamp(vec2(texc.xy + vec2(-d.x , 0)),0.0,1.0);\n\tright_coord = clamp(vec2(texc.xy + vec2(d.x , 0)),0.0,1.0);\n\tabove_coord = clamp(vec2(texc.xy + vec2(0,d.y)),0.0,1.0);\n\tbelow_coord = clamp(vec2(texc.xy + vec2(0,-d.y)),0.0,1.0);\n\n\tlefta_coord = clamp(vec2(texc.xy + vec2(-d.x , d.x)),0.0,1.0);\n\trighta_coord = clamp(vec2(texc.xy + vec2(d.x , d.x)),0.0,1.0);\n\tleftb_coord = clamp(vec2(texc.xy + vec2(-d.x , -d.x)),0.0,1.0);\n\trightb_coord = clamp(vec2(texc.xy + vec2(d.x , -d.x)),0.0,1.0);\n}","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Stylize\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"intensity\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 10.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t}\n\t]\n}*/\n\n#if __VERSION__ <= 120\nvarying vec2 left_coord;\nvarying vec2 right_coord;\nvarying vec2 above_coord;\nvarying vec2 below_coord;\n\nvarying vec2 lefta_coord;\nvarying vec2 righta_coord;\nvarying vec2 leftb_coord;\nvarying vec2 rightb_coord;\n#else\nin vec2 left_coord;\nin vec2 right_coord;\nin vec2 above_coord;\nin vec2 below_coord;\n\nin vec2 lefta_coord;\nin vec2 righta_coord;\nin vec2 leftb_coord;\nin vec2 rightb_coord;\n#endif\n\nfloat gray(vec4 n)\n{\n\treturn (n.r + n.g + n.b)/3.0;\n}\n\nvoid main()\n{\n\n\tvec4 color = IMG_THIS_PIXEL(inputImage);\n\tvec4 colorL = IMG_NORM_PIXEL(inputImage, left_coord);\n\tvec4 colorR = IMG_NORM_PIXEL(inputImage, right_coord);\n\tvec4 colorA = IMG_NORM_PIXEL(inputImage, above_coord);\n\tvec4 colorB = IMG_NORM_PIXEL(inputImage, below_coord);\n\n\tvec4 colorLA = IMG_NORM_PIXEL(inputImage, lefta_coord);\n\tvec4 colorRA = IMG_NORM_PIXEL(inputImage, righta_coord);\n\tvec4 colorLB = IMG_NORM_PIXEL(inputImage, leftb_coord);\n\tvec4 colorRB = IMG_NORM_PIXEL(inputImage, rightb_coord);\n\n\t//\tblur, do edges, then use the edge as a mask on the blurred\n\n\tfloat gx = (-1.0 * gray(colorLA)) + (-2.0 * gray(colorL)) + (-1.0 * gray(colorLB)) + (1.0 * gray(colorRA)) + (2.0 * gray(colorR)) + (1.0 * gray(colorRB));\n\tfloat gy = (1.0 * gray(colorLA)) + (2.0 * gray(colorA)) + (1.0 * gray(colorRA)) + (-1.0 * gray(colorRB)) + (-2.0 * gray(colorB)) + (-1.0 * gray(colorLB));\n\n\tfloat edge = clamp(pow(gx*gx + gy*gy,0.5) * intensity,0.0,1.0);\n\tvec4 blurred = (color + colorL + colorR + colorA + colorB + colorLA + colorRA + colorLB + colorRB) / 9.0;\n\t//gl_FragColor = vec4(edge,edge,edge,1.0);\n\tgl_FragColor = blurred * (1.0-edge);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"intensity","Exposed":"intensity","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":10.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":23,"Metadata":{"ScriptingName":"Shape Morph Wrap","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1230.988636036767,293.16302894477633],"Size":[150.09375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Distortion Effect\"\n    ],\n    \"CREDIT\": \"VIDVOX\",\n    \"DESCRIPTION\": \"Wraps an image into a shape that is created by morphing two primitive shapes together\",\n    \"INPUTS\": [\n        {\n            \"NAME\": \"inputImage\",\n            \"TYPE\": \"image\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"mixPoint\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABELS\": [\n                \"Circle\",\n                \"Triangle\",\n                \"Rect\",\n                \"Pentagram\",\n                \"Hexagon\",\n                \"Star1\",\n                \"Star2\",\n                \"Heart\",\n                \"Rays\"\n            ],\n            \"NAME\": \"shape1\",\n            \"TYPE\": \"long\",\n            \"VALUES\": [\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8\n            ]\n        },\n        {\n            \"DEFAULT\": 1,\n            \"LABELS\": [\n                \"Circle\",\n                \"Triangle\",\n                \"Rect\",\n                \"Pentagram\",\n                \"Hexagon\",\n                \"Star1\",\n                \"Star2\",\n                \"Heart\",\n                \"Rays\"\n            ],\n            \"NAME\": \"shape2\",\n            \"TYPE\": \"long\",\n            \"VALUES\": [\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8\n            ]\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 2,\n            \"MIN\": 0,\n            \"NAME\": \"shapeWobble\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"preRotateAngle\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.75,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"angleShift\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABELS\": [\n                \"None\",\n                \"Extend\",\n                \"Repeat\",\n                \"Reflect\"\n            ],\n            \"NAME\": \"repeatStyle\",\n            \"TYPE\": \"long\",\n            \"VALUES\": [\n                0,\n                1,\n                2,\n                3\n            ]\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"repeatDecay\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"resultSize\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"MAX\": 2,\n            \"MIN\": 0,\n            \"NAME\": \"resultWidth\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"resultAngle\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": [\n                0.5,\n                0.5\n            ],\n            \"MAX\": [\n                1,\n                1\n            ],\n            \"MIN\": [\n                0,\n                0\n            ],\n            \"NAME\": \"resultCenter\",\n            \"TYPE\": \"point2D\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"NAME\": \"mirrorX\",\n            \"TYPE\": \"bool\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"NAME\": \"mirrorY\",\n            \"TYPE\": \"bool\"\n        }\n    ],\n    \"ISFVSN\": \"2\",\n    \"VSN\": \"1\"\n}\n*/\n\n\nconst float pi = 3.1415926535897932384626433832795;\nconst float tau =  6.2831853071795864769252867665590;\n\nvec2 rotatePoint(vec2 pt, float rot)\t{\n\tvec2 returnMe = pt * RENDERSIZE;\n\n\tfloat r = distance(RENDERSIZE/2.0, returnMe);\n\tfloat a = atan ((returnMe.y-RENDERSIZE.y/2.0),(returnMe.x-RENDERSIZE.x/2.0));\n\n\treturnMe.x = r * cos(a + 2.0 * pi * rot - pi) + 0.5;\n\treturnMe.y = r * sin(a + 2.0 * pi * rot - pi) + 0.5;\n\t\n\treturnMe = returnMe / RENDERSIZE + vec2(0.5);\n\t\n\treturn returnMe;\n}\n\nvec2 rotatePointNorm(vec2 pt, float rot)\t{\n\tvec2 returnMe = pt;\n\n\tfloat r = distance(vec2(0.50), returnMe);\n\tfloat a = atan((returnMe.y-0.5),(returnMe.x-0.5));\n\n\treturnMe.x = r * cos(a + 2.0 * pi * rot - pi) + 0.5;\n\treturnMe.y = r * sin(a + 2.0 * pi * rot - pi) + 0.5;\n\t\n\treturnMe = returnMe;\n\t\n\treturn returnMe;\n}\nvec2 rotatePointNormPt(vec2 pt, float rot, vec2 rpt)\t{\n\tvec2 returnMe = pt;\n\n\tfloat r = distance(vec2(0.50), returnMe);\n\tfloat a = atan((returnMe.y-rpt.y),(returnMe.x-rpt.x));\n\n\treturnMe.x = r * cos(a + 2.0 * pi * rot - pi) + rpt.x;\n\treturnMe.y = r * sin(a + 2.0 * pi * rot - pi) + rpt.y;\n\t\n\treturnMe = returnMe;\n\t\n\treturn returnMe;\n}\n\n//\tborrowed from pixel spirit deck!\n//\thttps://github.com/patriciogonzalezvivo/PixelSpiritDeck/tree/master/lib\n\nfloat triSDF(vec2 st) {\n    st = (st*2.-1.)*2.;\n    return max(abs(st.x) * 0.866025 + st.y * 0.5, -st.y * 0.5);\n}\nfloat circleSDF(vec2 st) {\n    return length(st-.5)*2.;\n}\nfloat polySDF(vec2 st, int V) {\n    st = st*2.-1.;\n    float a = atan(st.x,st.y)+pi;\n    float r = length(st);\n    float v = tau/float(V);\n    return cos(floor(.5+a/v)*v-a)*r;\n}\nfloat pentSDF(vec2 st)\t{\n\tvec2 pt = st;\n\tpt.y /= 0.89217;\n\treturn polySDF(pt, 5);\n}\nfloat hexSDF(vec2 st) {\n    st = abs(st*2.-1.);\n    return max(abs(st.y), st.x * 0.866025 + st.y * 0.5);\n}\nfloat flowerSDF(vec2 st, int N) {\n    st = st*2.-1.;\n    float r = length(st)*2.;\n    float a = atan(st.y,st.x);\n    float v = float(N)*.5;\n    return 1.-(abs(cos(a*v))*.5+.5)/r;\n}\nfloat heartSDF(vec2 st) {\n    st -= vec2(.5,.8);\n    float r = length(st)*5.5;\n    st = normalize(st);\n    return r - \n         ((st.y*pow(abs(st.x),0.67))/ \n         (st.y+1.5)-(2.)*st.y+1.26);\n}\nfloat starSDF(vec2 st, int V, float s) {\n    st = st*4.-2.;\n    float a = atan(st.y, st.x)/tau;\n    float seg = a * float(V);\n    a = ((floor(seg) + 0.5)/float(V) + \n        mix(s,-s,step(.5,fract(seg)))) \n        * tau;\n    return abs(dot(vec2(cos(a),sin(a)),\n                   st));\n}\nfloat raysSDF(vec2 st, int N) {\n    st -= .5;\n    return fract(atan(st.y,st.x)/tau*float(N));\n}\n\nfloat shapeForType(vec2 st, int shape)\t{\n\tif (shape == 0)\n\t\treturn circleSDF(st);\n\telse if (shape == 1)\t\n\t\treturn triSDF(st);\n\telse if (shape == 2)\n\t\treturn polySDF(st,4);\n\telse if (shape == 3)\n\t\treturn pentSDF(st);\n\telse if (shape == 4)\n\t\treturn hexSDF(st);\n\telse if (shape == 5)\n\t\treturn starSDF(st,5,0.07);\n\telse if (shape == 6)\n\t\treturn starSDF(st,12,0.12);\n\telse if (shape == 7)\n\t\treturn heartSDF(st);\n\telse if (shape == 8)\n\t\treturn raysSDF(st,6);\n}\n\nvoid main()\t{\n\tvec4\t\treturnMe = vec4(0.0);\n\tvec2\t\tst = gl_FragCoord.xy/RENDERSIZE;\n\n\tst += (0.5 - resultCenter);\n\tst = rotatePoint(st,resultAngle);\n\t\n    //\tsize\n\tst -= 0.5;\n\t//st += (0.5 - resultCenter);\n\tst /= max(0.000001,resultSize);\n\tst.x /= resultWidth;\n\tst += 0.5;\n   \n\tst = mix(vec2((st.x*RENDERSIZE.x/RENDERSIZE.y)-(RENDERSIZE.x*.5-RENDERSIZE.y*.5)/RENDERSIZE.y,st.y), \n\t\t\t\tvec2(st.x,st.y*(RENDERSIZE.y/RENDERSIZE.x)-(RENDERSIZE.y*.5-RENDERSIZE.x*.5)/RENDERSIZE.x), \n\t\t\t\tstep(RENDERSIZE.x,RENDERSIZE.y));\n\tfloat\t\tval1 = shapeForType(st,shape1);\n\tfloat\t\tval2 = shapeForType(st,shape2);\n\t//val1 = min(max(val1,0.0),1.0);\n\t//val2 = min(max(val2,0.0),1.0);\n\t\n\tfloat\t\tval = mix(val1,val2,mixPoint);\n\tvec2\t\tcnt = vec2(0.5,0.5);\n\tfloat\t\ta = (atan(cnt.y-st.y,cnt.x-st.x) + pi) / (tau);\n\t\n\tval += (shapeWobble == 0.0) ? 0.0 : shapeWobble * ((sin(TIME+10.0*tau*(a)))/13.0 + (sin(-TIME*2.1+17.0*tau*(a)))/17.0 + (sin(19.0*tau*(a)))/19.0);\n\t\n\tfloat\t\tr = val;\n\tif (repeatStyle == 1)\n\t\tr = max(0.0,min(r,1.0));\n\telse if (repeatStyle == 2)\n\t\tr = mod(r,1.0);\n\telse if (repeatStyle == 3)\t{\n\t\tr = mod(r,2.0);\n\t\tr = (r > 1.0) ? 2.0 - r : r;\t\n\t}\n\t\n\tif (r <= 1.0)\t{\n\t\t\n\t\ta = mod(a + angleShift, 1.0);\n\t\tvec2\tpt = vec2(a,r);\n\t\t//returnMe = vec4(r,a,0.0,1.0);\n\t\t\n\t\tif (mirrorX)\t{\n\t\t\tpt.x = (pt.x < 0.5) ? pt.x * 2.0 : 2.0 - pt.x * 2.0;\n\t\t}\n\t\tif (mirrorY)\t{\n\t\t\tpt.y = (pt.y < 0.5) ? pt.y * 2.0 : 2.0 - pt.y * 2.0;\t\n\t\t}\n\t\t\n\t\tpt = rotatePointNorm(pt,preRotateAngle);\n\t\treturnMe = IMG_NORM_PIXEL(inputImage,pt);\n\t\t\n\t\tif (repeatStyle > 0)\t{\n\t\t\tif (repeatStyle == 1)\n\t\t\t\treturnMe.a *= (val > 1.0) ? 1.0 - repeatDecay * (val) : 1.0;\n\t\t\telse\t{\n\t\t\t\tfloat repCount = 1.0 / (1.0+resultSize);\n\t\t\t\treturnMe.a *= 1.0 - repeatDecay * floor(val) / repCount;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tgl_FragColor = returnMe;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"mixPoint","Exposed":"mixpoint","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"shape1","Exposed":"shape1","Value":{"Int":0},"Domain":{"Int":{"Values":[0,1,2,3,4,5,6,7,8]}},"Values":[["Circle",{"Int":0}],["Triangle",{"Int":1}],["Rect",{"Int":2}],["Pentagram",{"Int":3}],["Hexagon",{"Int":4}],["Star1",{"Int":5}],["Star2",{"Int":6}],["Heart",{"Int":7}],["Rays",{"Int":8}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"shape2","Exposed":"shape2","Value":{"Int":1},"Domain":{"Int":{"Values":[0,1,2,3,4,5,6,7,8]}},"Values":[["Circle",{"Int":0}],["Triangle",{"Int":1}],["Rect",{"Int":2}],["Pentagram",{"Int":3}],["Hexagon",{"Int":4}],["Star1",{"Int":5}],["Star2",{"Int":6}],["Heart",{"Int":7}],["Rays",{"Int":8}]]},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"shapeWobble","Exposed":"shapewobble","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"preRotateAngle","Exposed":"prerotateangle","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"angleShift","Exposed":"angleshift","Value":{"Float":0.75},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"repeatStyle","Exposed":"repeatstyle","Value":{"Int":0},"Domain":{"Int":{"Values":[0,1,2,3]}},"Values":[["None",{"Int":0}],["Extend",{"Int":1}],["Repeat",{"Int":2}],["Reflect",{"Int":3}]]},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"repeatDecay","Exposed":"repeatdecay","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"resultSize","Exposed":"resultsize","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"resultWidth","Exposed":"resultwidth","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"resultAngle","Exposed":"resultangle","Value":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"resultCenter","Exposed":"resultcenter","Value":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"mirrorX","Exposed":"mirrorx","Value":{"Bool":false},"Domain":{"Bool":null}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"mirrorY","Exposed":"mirrory","Value":{"Bool":false},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":21,"Metadata":{"ScriptingName":"Pixel Shifter","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[842.1886360367671,27.051028944776476],"Size":[110.78125,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Distortion Effect\"\n    ],\n    \"CREDIT\": \"by VIDVOX\",\n    \"DESCRIPTION\": \"Shifts pixels up and down\",\n    \"INPUTS\": [\n        {\n            \"NAME\": \"inputImage\",\n            \"TYPE\": \"image\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"Horizontal Phase\",\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"hPhase\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"LABEL\": \"Horizontal Frequency\",\n            \"MAX\": 16,\n            \"MIN\": -16,\n            \"NAME\": \"hFrequency\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"Horizontal Random\",\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"hRandom\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"Vertical Phase\",\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"vPhase\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"Vertical Frequency\",\n            \"MAX\": 16,\n            \"MIN\": -16,\n            \"NAME\": \"vFrequency\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"Vertical Random\",\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"vRandom\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"LABEL\": \"Sinusoidal\",\n            \"NAME\": \"doSin\",\n            \"TYPE\": \"bool\"\n        },\n        {\n            \"DEFAULT\": 1,\n            \"LABEL\": \"Mirror\",\n            \"NAME\": \"mirror\",\n            \"TYPE\": \"bool\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n\nfloat\t\tPI_CONST = 3.14159265359;\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nvoid main()\n{\n\t//\tstart with the pixel\n\tvec2 loc = isf_FragNormCoord;\n\tfloat modVal = 1.0;\n\t\n\tif (mirror)\n\t\tmodVal = 2.0;\n\t\n\t//\tshift the loc.x by the frequency * loc.y + phase\n\tif (doSin)\n\t\tloc.x = mod(hRandom * rand(vec2(TIME * 0.127, loc.x)) + loc.x + sign(hFrequency) * 0.5 * (1.0+cos(2.0 * PI_CONST * (hPhase + hFrequency * loc.y))), modVal);\n\telse\n\t\tloc.x = mod(hRandom * rand(vec2(TIME * 0.129, loc.x)) + loc.x + hFrequency * loc.y + hPhase, modVal);\n\n\t//\tshift the loc.y by the frequency * loc.x + phase\n\tif (doSin)\n\t\tloc.y = mod(vRandom * rand(vec2(TIME * 0.273, loc.y)) + loc.y + sign(vFrequency) * 0.5 * (1.0+cos(2.0 * PI_CONST * (vPhase + vFrequency * loc.x))), modVal);\n\telse\n\t\tloc.y = mod(vRandom * rand(vec2(TIME * 0.341, loc.y)) +loc.y + vFrequency * loc.x + vPhase, modVal);\n\t\t\n\tif (loc.x > 1.0)\n\t\tloc.x = 2.0 - loc.x;\n\t\t\n\tif (loc.y > 1.0)\n\t\tloc.y = 2.0 - loc.y;\n\t\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage,loc);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"hPhase","Exposed":"hphase","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"hFrequency","Exposed":"hfrequency","Value":{"Float":1.0},"Domain":{"Float":{"Min":-16.0,"Max":16.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"hRandom","Exposed":"hrandom","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"vPhase","Exposed":"vphase","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"vFrequency","Exposed":"vfrequency","Value":{"Float":0.0},"Domain":{"Float":{"Min":-16.0,"Max":16.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"vRandom","Exposed":"vrandom","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"doSin","Exposed":"dosin","Value":{"Bool":false},"Domain":{"Bool":null}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"mirror","Exposed":"mirror","Value":{"Bool":false},"Domain":{"Bool":null}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":20,"Metadata":{"ScriptingName":"Noise Displace","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1111.756636036767,30.507028944776607],"Size":[124.125,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"CATEGORIES\" : [\n    \"Distortion Effect\", \"Noise\"\n  ],\n  \"DESCRIPTION\" : \"Displaces image randomly\",\n  \"ISFVSN\" : \"2\",\n  \"INPUTS\" : [\n    {\n      \"NAME\" : \"inputImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"NAME\" : \"displaceX\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 0.1,\n      \"DEFAULT\" : 0.0,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Displace X\"\n    },\n    {\n      \"NAME\" : \"displaceY\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 0.1,\n      \"DEFAULT\" : 0.0,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Displace Y\"\n    },\n    {\n      \"NAME\" : \"detailX\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 1.0,\n      \"DEFAULT\" : 0.1,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Detail X\"\n    },\n    {\n      \"NAME\" : \"detailY\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 1.0,\n      \"DEFAULT\" : 0.1,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Detail Y\"\n    },\n    {\n      \"NAME\" : \"updateTime\",\n      \"TYPE\" : \"float\",\n      \"MAX\" : 0.1,\n      \"DEFAULT\" : 0.01,\n      \"MIN\" : 0.0,\n      \"LABEL\" : \"Frequency\"\n    }\n  ],\n  \"CREDIT\" : \"VIDVOX\"\n}\n*/\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main()\t{\n\n\tvec4 inputPixelColor;\n\tvec2 uv = isf_FragNormCoord.xy;\n\tfloat wobbleTime = (updateTime == 0.0) ? TIME : floor(TIME/updateTime);\n\tvec2 waveLoc = fract((uv)*vec2(detailX, detailY));\n\tfloat val1 = rand(vec2(waveLoc.x, wobbleTime));\n\tfloat val2 = rand(vec2(waveLoc.y, wobbleTime+1.0));\n\tvec2 wave = vec2(val1, val2)-0.5;\n\twave *= vec2(displaceY, displaceX);\n\n\tinputPixelColor = IMG_NORM_PIXEL(inputImage, uv + wave.yx);\n\n\tgl_FragColor = inputPixelColor;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"displaceX","Exposed":"displacex","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"displaceY","Exposed":"displacey","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"detailX","Exposed":"detailx","Value":{"Float":0.10000000149011612},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"detailY","Exposed":"detaily","Value":{"Float":0.10000000149011612},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"updateTime","Exposed":"updatetime","Value":{"Float":0.009999999776482582},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":19,"Metadata":{"ScriptingName":"Mirror Edge","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1732.1086360367672,-12.69297105522378],"Size":[106.59375,22.0],"Loops":false,"Vertex":"#if __VERSION__ <= 120\nvarying vec2 translated_coord;\n#else\nout vec2 translated_coord;\n#endif\n\nconst float pi = 3.14159265359;\n\nvoid main()\t{\n\tisf_vertShaderInit();\n\n\tvec2 loc = RENDERSIZE * vec2(isf_FragNormCoord[0],isf_FragNormCoord[1]);\n\t\n\tfloat r = distance(RENDERSIZE/2.0, loc);\n\tfloat a = atan ((loc.y-RENDERSIZE.y/2.0),(loc.x-RENDERSIZE.x/2.0));\n\n\tloc.x = r * cos(a + 2.0 * pi * angle) + 0.5;\n\tloc.y = r * sin(a + 2.0 * pi * angle) + 0.5;\n\t\n\ttranslated_coord = loc / RENDERSIZE + vec2(0.5);\n\n}","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Tile Effect\"\n    ],\n    \"CREDIT\": \"by VIDVOX\",\n    \"INPUTS\": [\n        {\n            \"NAME\": \"inputImage\",\n            \"TYPE\": \"image\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"Angle\",\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"angle\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": [\n                0,\n                0.5\n            ],\n            \"LABEL\": \"Shift\",\n            \"MAX\": [\n                1,\n                1\n            ],\n            \"MIN\": [\n                0,\n                0\n            ],\n            \"NAME\": \"shift\",\n            \"TYPE\": \"point2D\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n#if __VERSION__ <= 120\nvarying vec2 translated_coord;\n#else\nin vec2 translated_coord;\n#endif\n\n\nvoid main() {\n\tvec2 loc = translated_coord;\n\tvec2 modifiedCenter = shift;\n\t\n\tloc = mod(loc + modifiedCenter, 1.0);\n\t\n\t//\tmirror the image so it's repeated 4 times at different reflections\n\tloc = 2.0 * abs(loc - 0.5);\n\t\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage, loc);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"angle","Exposed":"angle","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"shift","Exposed":"shift","Value":{"Vec2f":[0.0,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":18,"Metadata":{"ScriptingName":"Convergence","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[1491.9166360367674,-5.780971055223631],"Size":[113.203125,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"DESCRIPTION\": \"\",\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Glitch\", \"Color Effect\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"horizontal_magnitude\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.00,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.125\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"vertical_magnitude\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.00,\n\t\t\t\"MAX\": 1.0,\n\t\t\t\"DEFAULT\": 0.125\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"color_magnitude\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"MIN\": 0.00,\n\t\t\t\"MAX\": 2.0,\n\t\t\t\"DEFAULT\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"mode\",\n\t\t\t\"VALUES\": [\n\t\t\t\t0,\n\t\t\t\t1,\n\t\t\t\t2,\n\t\t\t\t3\n\t\t\t],\n\t\t\t\"LABELS\": [\n\t\t\t\t\"add\",\n\t\t\t\t\"add mod\",\n\t\t\t\t\"multiply\",\n\t\t\t\t\"difference\"\n\t\t\t],\n\t\t\t\"DEFAULT\": 0,\n\t\t\t\"TYPE\": \"long\"\n\t\t}\n\t]\n\t\n}*/\n\n\n\n//\tadapted from maxilla inc's https://github.com/maxillacult/ofxPostGlitch/\n\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\n\nvoid main()\n{\n\t\n\tvec2 texCoord = isf_FragNormCoord;\n\n\tvec4 col = IMG_NORM_PIXEL(inputImage,texCoord);\n\n\tvec4 col_r = vec4(0.0);\n\tvec4 col_l = vec4(0.0);\n\tvec4 col_g = vec4(0.0);\n\n\tvec2 rand_offset = texCoord + vec2((horizontal_magnitude * rand(vec2(TIME,0.213))-horizontal_magnitude/2.0), (vertical_magnitude * rand(vec2(TIME,0.463467))) - vertical_magnitude / 2.0);\n\tcol_r = IMG_NORM_PIXEL(inputImage,rand_offset);\n\trand_offset = texCoord + vec2((horizontal_magnitude * rand(vec2(TIME,0.5345))-horizontal_magnitude/2.0), (vertical_magnitude * rand(vec2(TIME,0.7875))) - vertical_magnitude / 2.0);\n\tcol_l = IMG_NORM_PIXEL(inputImage,rand_offset);\n\trand_offset = texCoord + vec2((horizontal_magnitude * rand(vec2(TIME,0.456345))-horizontal_magnitude/2.0), (vertical_magnitude * rand(vec2(TIME,0.9432))) - vertical_magnitude / 2.0);\n\tcol_g = IMG_NORM_PIXEL(inputImage,rand_offset);\n\n\tvec4 color_shift;\n\tcolor_shift.b = color_magnitude*col_r.b*max(1.0,sin(texCoord.y*1.2)*2.5)*rand(vec2(TIME,0.0342));\n\tcolor_shift.r = color_magnitude*col_l.r*max(1.0,sin(texCoord.y*1.2)*2.5)*rand(vec2(TIME,0.5253));\n\tcolor_shift.g = color_magnitude*col_g.g*max(1.0,sin(texCoord.y*1.2)*2.5)*rand(vec2(TIME,0.1943));\n\tcolor_shift.a = 0.0;\n\n\t//\tif doing add maths\n\tif (mode == 0)\t{\n\t\tcol = col + color_shift;\n\t}\n\t//\tadd mod\n\telse if (mode == 1)\t{\n\t\tcol = mod(col + color_shift,1.001);\n\t}\n\t//\tmultiply\n\telse if (mode == 2)\t{\n\t\tcol = mix(col, col * (color_magnitude + color_shift),0.9);\n\t}\n\t// difference\n\telse if (mode == 3)\t{\n\t\tcol = abs(color_shift - col);\n\t}\n\n\tgl_FragColor = col;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"horizontal_magnitude","Exposed":"horizontal_magnitude","Value":{"Float":0.125},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"vertical_magnitude","Exposed":"vertical_magnitude","Value":{"Float":0.125},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"color_magnitude","Exposed":"color_magnitude","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"mode","Exposed":"mode","Value":{"Int":0},"Domain":{"Int":{"Values":[0,1,2,3]}},"Values":[["add",{"Int":0}],["add mod",{"Int":1}],["multiply",{"Int":2}],["difference",{"Int":3}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":17,"Metadata":{"ScriptingName":"Fade","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[792.0766360367676,-211.4129710552237],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"INPUTS\" : [\n    {\n      \"TYPE\" : \"image\",\n      \"NAME\" : \"startImage\"\n    },\n    {\n      \"NAME\" : \"endImage\",\n      \"TYPE\" : \"image\"\n    },\n    {\n      \"MAX\" : 1,\n      \"TYPE\" : \"float\",\n      \"MIN\" : 0,\n      \"NAME\" : \"progress\",\n      \"DEFAULT\" : 0\n    }\n  ],\n  \"CREDIT\": \"Automatically converted from https://www.github.com/gl-transitions/gl-transitions/tree/master/fade.glsl\",\n  \"DESCRIPTION\": \"\",\n  \"CATEGORIES\" : [\n    \"Dissolve\"\n  ],\n  \"ISFVSN\" : \"2\"\n}\n*/\n\n\n\nvec4 getFromColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(startImage, inUV);\n}\nvec4 getToColor(vec2 inUV)\t{\n\treturn IMG_NORM_PIXEL(endImage, inUV);\n}\n\n\n\n// author: gre\n// license: MIT\n\nvec4 transition (vec2 uv) {\n  return mix(\n    getFromColor(uv),\n    getToColor(uv),\n    progress\n  );\n}\n\n\n\nvoid main()\t{\n\tgl_FragColor = transition(isf_FragNormCoord.xy);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"progress","Exposed":"progress","Address":"osc (boli):/artnet/ch/14","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":16,"Metadata":{"ScriptingName":"Kaleidoscope","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[605.1806360367677,-3.3249710552237275],"Size":[115.890625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Kaleidoscope\",\n        \"Stylize\"\n    ],\n    \"CREDIT\": \"by VIDVOX\",\n    \"INPUTS\": [\n        {\n            \"NAME\": \"inputImage\",\n            \"TYPE\": \"image\"\n        },\n        {\n            \"DEFAULT\": 6,\n            \"MAX\": 32,\n            \"MIN\": 1,\n            \"NAME\": \"sides\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": -1,\n            \"NAME\": \"angle\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"slidex\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"slidey\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": [\n                0,\n                0\n            ],\n            \"MAX\": [\n                1,\n                1\n            ],\n            \"MIN\": [\n                0,\n                0\n            ],\n            \"NAME\": \"center\",\n            \"TYPE\": \"point2D\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n\nconst float tau = 6.28318530718;\n\n\n\n\nvoid main() {\n  // normalize to the center\n\tvec2 loc = RENDERSIZE * vec2(isf_FragNormCoord[0],isf_FragNormCoord[1]);\n\tfloat r = distance(center*RENDERSIZE, loc);\n\tfloat a = atan ((loc.y-center.y*RENDERSIZE.y),(loc.x-center.x*RENDERSIZE.x));\n\t\n\t// kaleidoscope\n\ta = mod(a, tau/sides);\n\ta = abs(a - tau/sides/2.);\n\t\n\tloc.x = r * cos(a + tau * angle);\n\tloc.y = r * sin(a + tau * angle);\n\t\n\tloc = (center*RENDERSIZE + loc) / RENDERSIZE;\n\t\n\tloc.x = mod(loc.x + slidex, 1.0);\n\tloc.y = mod(loc.y + slidey, 1.0);\n\n\t// sample the image\n\tif (loc.x < 0.0)\t{\n\t\tloc.x = mod(abs(loc.x), 1.0);\n\t}\n\tif (loc.y < 0.0)\t{\n\t\tloc.y = mod(abs(loc.y),1.0);\n\t}\n\tif (loc.x > 1.0)\t{\n\t\tloc.x = mod(abs(1.0-loc.x),1.0);\n\t}\n\tif(loc.y > 1.0)\t{\n\t\tloc.y = mod(abs(1.0-loc.y),1.0);\t\n\t}\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage, loc);;\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"sides","Exposed":"sides","Address":"osc (boli):/artnet/ch/26","Value":{"Float":12.973099708557129},"Domain":{"Float":{"Min":1.0,"Max":32.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"angle","Exposed":"angle","Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"slidex","Exposed":"slidex","Value":{"Float":0.33476388454437256},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"slidey","Exposed":"slidey","Value":{"Float":0.3014305531978607},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"center","Exposed":"center","Value":{"Vec2f":[0.5008583068847656,0.48349109292030334]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"c9a5fd8e-b66e-41ff-8feb-bca2cdab4990","ObjectName":"solid_color","id":15,"Metadata":{"ScriptingName":"Solid color","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[2015.593682891647,188.88653063933816],"Size":[99.78125,22.0],"Loops":false,"Inlets":[{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Color","Exposed":"color","Value":{"Vec4f":[1.0,1.0,1.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Color output","Exposed":"color output","Description":"(description)"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":13,"Metadata":{"ScriptingName":"Video Mixer.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-220.28880424976091,-220.98609355946428],"Size":[117.671875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Address":"osc (boli):/artnet/ch/6","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Address":"osc (boli):/artnet/ch/7","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Address":"osc (boli):/artnet/ch/8","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Address":"osc (boli):/artnet/ch/9","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Address":"osc (boli):/artnet/ch/10","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Address":"osc (boli):/artnet/ch/11","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Address":"osc (boli):/artnet/ch/12","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Address":"osc (boli):/artnet/ch/13","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":12,"Metadata":{"ScriptingName":"ShapingFunctions","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-824.9904405481643,1180.5339140625],"Size":[142.734375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"DESCRIPTION\": \"https://www.shadertoy.com/view/llycWd\",\n\t\"CREDIT\": \"shaping functions by Simplyfire\",\n\t\"CATEGORIES\": [\n\t\t\"Your category\"\n\t],\n\t\"INPUTS\": [\n\t]\n}*/\n\n#define iResolution RENDERSIZE\n#define iTime TIME\n\n#define pi 3.14159265359\n\nvec3 hsb2rgb( in vec3 c){\n vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0), 6.0)-3.0)-1.0, 0.0, 1.0 );\n rgb = rgb*rgb*(3.0-2.0*rgb);  return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvec3 rect(vec2 uv, vec2 c, vec2 s, vec2 off){\n  float p = max(smoothstep(c.x+s.x,c.x+s.x+off.x, uv.x),\n                smoothstep(c.y+s.y,c.y+s.y+off.y,uv.y));\n  float q = max(smoothstep(c.x-s.x,c.x-s.x-off.x, uv.x),\n                smoothstep(c.y-s.y,c.y-s.y-off.y,uv.y));\n  return vec3(1.-max(p,q));\n}\n\nfloat map(float x, float a1, float a2, float b1, float b2){\n  return b1 + (b2-b1) * (x-a1) / (a2-a1);\n}\n\nvec3 ellipse(vec2 uv, vec2 c, float r){\n  float d = distance(uv,c);\n  return vec3(1.-smoothstep(r, r+0.08, d));\n}\n\nvec3 shape(vec2 st, int N, float scl, float smth, float rot){\n  // Remap the space to -1. to 1.\n  st = st *2.-1.;\n  // Angle and radius from the current pixel\n  float a = atan(st.x,st.y)+pi+TIME*rot;\n  float r = pi*2./float(N);\n  // Shaping function that modulate the distance\n  float d = cos(floor(.5+a/r)*r-a)*length(st*2.)/scl;\n  return vec3(1.0-smoothstep(r,r+smth,d));\n}\n\nfloat maxrect(vec2 uv, vec2 c){\n\treturn max(abs(c.x-uv.x), abs(c.y-uv.y));\n}\n\nfloat minrect(vec2 uv, vec2 c){\n\treturn min(abs(c.x-uv.x), abs(c.y-uv.y));\n}\n\nfloat dist(vec2 uv, vec2 c){\n\treturn distance(uv,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   float t = TIME;\n   vec2 uv = fragCoord.xy / iResolution.xy;\n   vec2 c = vec2(.5);\n   float d0 = dist(uv, c);\n   float d1 = maxrect(uv, c);\n   float d2 = minrect(uv, c);\n   vec3 color = vec3(0.,0.,0.);\n   float v = .5+.5*sin(d2/d1/d0*.8+(t*1.5));\n   color.r = map(d0/2.+t/30., 0., 0.5, .0, 1.);\n   color.g = 1.-d0*.5;\n   color.b = .6-d0*2.+v;\n\n   fragColor = vec4(hsb2rgb(color),1.);\n }\n\nvoid main(void) {\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}","Inlets":[],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":11,"Metadata":{"ScriptingName":"HypnoticRipples","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-798.4384405481643,870.4619140625002],"Size":[135.109375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"HypnoticRipples by Cha\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\", \n\t\t\t\"TYPE\" : \"float\", \n\t\t\t\"MIN\" : -3,\n\t\t\t\"MAX\" : 3,\n\t\t\t\"DEFAULT\" : 1\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/ldX3zr\n\nvec2 HRCenter = vec2(0.5,0.5);\nfloat HRSpeed = 0.035;\nfloat HRInvAr = RENDERSIZE.y / RENDERSIZE.x;\n\nvoid main(void)\n{\n   vec2 uv = 2.0 * iZoom * (gl_FragCoord.xy/RENDERSIZE.xy- 0.25);\n   uv.x -= 0.0;\n   uv.y -= 0.0;\nvec3 col = vec4(uv,0.5+0.5*sin(TIME),1.0).xyz;\n   \n     vec3 texcol;\n\t\t\t\n\tfloat x = (HRCenter.x-uv.x);\n\tfloat y = (HRCenter.y-uv.y) *HRInvAr;\n\t\t\n\t//float r = -sqrt(x*x + y*y); //uncoment this line to symmetric ripples\n\tfloat r = -(x*x + y*y);\n\tfloat z = 1.0 + 0.5*sin((r+TIME*HRSpeed)/0.013);\n\t\n\ttexcol.x = z;\n\ttexcol.y = z;\n\ttexcol.z = z;\n\t\n gl_FragColor = vec4(col*texcol,1.0);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Domain":{"Float":{"Min":-3.0,"Max":3.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":10,"Metadata":{"ScriptingName":"blocks","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-743.8944405481643,348.7099140625],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"CATEGORIES\": [\n    \"Automatically Converted\"\n  ],\n  \"INPUTS\": [\n    {\n      \"MAX\": [\n        1,\n        1\n      ],\n      \"MIN\": [\n        0,\n        0\n      ],\n      \"NAME\": \"mouse\",\n      \"TYPE\": \"point2D\"\n    }\n  ]\n}\n*/\n\n\n//MG - raymarching\n//distance function(s) provided by\n//http://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm\n\n// Colorizer edit, rotation edit, and depth fix by ABraker\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\n#define MIN\t0.0\n#define MAX\t60.0\n#define DELTA\t0.01\n#define ITER\t300\n\nfloat sphere(vec3 p, float r) {\n\tp = mod(p,2.0)-0.5*2.0;\n\treturn length(p)-r;\n}\n\n// Thanks to http://glsl.heroku.com/e#15207.1\nmat4 rotationMatrix(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n\tp = mod(p,2.0)-0.5*2.0;\n\tvec3 d = abs(p) - b;\n\treturn min(max(d.x,max(d.y,d.z)),0.0) +\tlength(max(d,0.0));\n}\n\nfloat castRay(vec3 o,vec3 d) {\n\tfloat delta = MAX;\n\tfloat t = MIN;\n\tfor (int i = 0;i <= ITER;i += 1) {\n\t\tvec3 p = o+d*t;\n\t\t\n\t\tdelta = sdBox(p,vec3(sin(TIME)/8.0+0.5,sin(TIME)/8.0+0.5,0.3));\n\t\tt += delta;\n\t\tif (delta/t-DELTA <= 0.0) {return float(i)/2.0;}  // EDIT BY ABRAKER: dividing by t seems to get rid of the glitches in far depth\n\t}\n\treturn 0.0;\n}\n\nvoid main() {\n\tvec2 p=(gl_FragCoord.xy/RENDERSIZE.y)*1.0;\n\tp.x-=RENDERSIZE.x/RENDERSIZE.y*0.5;p.y-=0.5;\n\tvec3 o = vec3(TIME,0,cos(TIME));\n\tmat4 rot = rotationMatrix(vec3(1, 0, 0.0), mouse.y*2.0-1.0)*rotationMatrix(vec3(0, 1, 0), mouse.x*2.0-1.0);\n\tvec3 d = normalize(vec3(p.x,p.y,1.0));\n\t\n\tvec4 d2 = rot*vec4(d, 1.0);\n\t\n\t\n\tfloat t = castRay(o,d2.xyz);\n\t\n\t// I have no idea why assigning the same thing to a variable changes color output\n\tvec4 colorize = vec4(sin(t/4.0+TIME)/8.0, cos(t/5.0+TIME)/8.0, cos(t/3.0+TIME)/8.0,0);\n\t\n\tif (t < MAX) \n\t{\n\t t = 1.0-t/MAX;\n\t gl_FragColor = vec4(t,t,t,1.0)+ vec4(sin(t/4.0+TIME)/8.0, cos(t/5.0+TIME/2.0)/8.0, cos(t/3.0+TIME)/8.0,0); // +colorize\n\t} \n\telse\n\t gl_FragColor = vec4(0,0,0,0);\n}","Inlets":[{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"mouse","Exposed":"mouse","Value":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":9,"Metadata":{"ScriptingName":"HypnoSwirl","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-792.8944405481643,514.7099140625],"Size":[103.9375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"HypnoSwirl by Scottapotamas\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t}\n,\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n,\n\t\t{\n\t\t\t\"NAME\": \"iZoom\", \n\t\t\t\"TYPE\" : \"float\", \n\t\t\t\"MIN\" : -3,\n\t\t\t\"MAX\" : 3,\n\t\t\t\"DEFAULT\" : 1\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/4ds3WH\n\n#define halfPhase 3.5\n#define speed_modifier 1.5\n\nvoid main(void) {\n\tvec2 p = -1.0 +  iZoom * 2.0 * gl_FragCoord.xy / RENDERSIZE.xy; \n\tp.x -= 0.0;\n\tp.y -= 0.0;\n\n\tfloat activeTime = TIME * speed_modifier;\n\tvec3 col; \n\tfloat timeMorph = 0.0;\n\t\n\tp *= 7.0;\n\t\n\tfloat a = atan(p.y,p.x);\n\tfloat r = sqrt(dot(p,p));\n\t\n\tif(mod(activeTime, 2.0 * halfPhase) < halfPhase)\n\t\ttimeMorph = mod(activeTime, halfPhase);\n\telse\n\t\ttimeMorph = (halfPhase - mod(activeTime, halfPhase));\t\n\t\t\n\ttimeMorph = 2.0*timeMorph + 1.0;\n\t\n\tfloat w = 0.25 + 3.0*(sin(activeTime + 1.0*r)+ 3.0*cos(activeTime + 5.0*a)/timeMorph);\n\tfloat x = 0.8 + 3.0*(sin(activeTime + 1.0*r)+ 3.0*cos(activeTime + 5.0*a)/timeMorph);\n\t\n\tcol = vec3(iColor.r,iColor.g,iColor.b)*1.1;\n\n\tgl_FragColor = vec4(col*w*x,1.0);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Domain":{"Float":{"Min":-3.0,"Max":3.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":8,"Metadata":{"ScriptingName":"colors","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-783.0784405481643,1284.5179140624998],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n  \"CATEGORIES\": [\n    \"Automatically Converted\"\n  ],\n  \"INPUTS\": [\n    \n  ]\n}\n*/\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n \n// my first raymarching \\o/ - thanks to iq and his wonderful tools\n \n \nvec3 rotateX(vec3 p, float f) { return vec3(p.x, cos(f)*p.y - sin(f)*p.z, sin(f)*p.y + cos(f)*p.z); }\nvec3 rotateY(vec3 p, float f) { return vec3(cos(f)*p.x + sin(f)*p.z, p.y, cos(f)*p.z - sin(f)*p.x); }\nvec3 rotateZ(vec3 p, float f) { return vec3(cos(f)*p.x - sin(f)*p.y, sin(f)*p.x + cos(f)*p.y, p.z);}\n \nfloat obj_udRoundBox(vec3 p) { // ray marching objects\n\tvec3 b = vec3(.3);\n\tp = rotateZ(rotateY(rotateX(p, 0.22*TIME), 0.33*TIME), 0.11*TIME);\n\treturn length(max(abs(p)-b,0.0))-.01;\n}\n#define pi    3.1415926535897932384626433832795 //pi\n \nvec4 spuke(vec4 pos)\n{\n\tvec2 p   =((pos.z+vv_FragNormCoord*pi)+(sin((((length(sin(vv_FragNormCoord*(pos.xy)+TIME*pi)))+(cos((vv_FragNormCoord-TIME*pi)/pi)))))*vv_FragNormCoord))+pos.xy*pos.z; \n\tvec3 col = vec3( 0.0, 0.0, 0.0 );\n\tfloat ca = 0.0;\n\tfor( int j = 1; j < 14; j++ )\n\t{\n\t\tp *= 1.4;\n\t\tfloat jj = float( j );\n\t\t\n\t\tfor( int i = 1; i <10; i++ )  \n\t\t{\n\t\t\tvec2 newp = p*0.96;\n\t\t\tfloat ii = float( i );\n\t\t\tnewp.x += 1.2 / ( ii + jj ) * sin( ii * p.y + (p.x*.3) + cos(TIME/pi/pi)*pi*pi + 0.003 * ( jj / ii ) ) + 1.0;\n\t\t\tnewp.y += 0.8 / ( ii + jj ) * cos( ii * p.x + (p.y*.3) + sin(TIME/pi/pi)*pi*pi + 0.003 * ( jj / ii ) ) - 1.0;\n\t\t\tp=newp;\n\t\t\t\n\t\t\n\t\t}\n\t\tp   *= 0.9;\n\t\tcol += vec3( 0.5 * sin( pi * p.x ) + 0.5, 0.5 * sin( pi * p.y ) + 0.5, 0.5 * sin( pi * p.x ) * cos( pi * p.y ) + 0.5 )*(0.5*sin(pos.z*pi)+0.5);\n\t\tca  += 0.7;\n\t}\n\tcol /= ca;\n\treturn vec4( col * col * col, 1.0 );\n}\nvoid main(void) {\n\tvec2 q = gl_FragCoord.xy/max(RENDERSIZE.x, RENDERSIZE.y);\n\tvec2 vPos = 2.*q;\n\tvPos += vec2(-1., -.5);\n \n\t// Camera setup\n\tvec3 camUp = vec3(10.,10.,0.);\n\tvec3 camlookAt = vec3(0.);\n\tvec3 camPos = vec3(1.);\n\tvec3 camDir = normalize(camlookAt - camPos);\n\tvec3 u = normalize(cross(camUp, camDir));\n\tvec3 v = cross(camDir, u);\n\tvec3 vcv = camPos + camDir;\n\tvec3 scrCoord = vPos.x*u*1. + vPos.y*v*1.;\n\tvec3 scp = normalize(scrCoord - camPos);\n \n\t// Raymarching\n\tconst vec3 e = vec3(0.0005, 0.005, 0.0005);\n\tconst float maxd = 6.;\n\tfloat d = .05;\n\tvec3 p;\n \n\tfloat f = 0.5;\n\tfor(int i = 0; i < 3; i++) {\n\t    \tif ((abs(d) < .04) || (f > maxd)) break;\n\t    \tf += d;\n\t    \tp = vec3(2.) + scp*f;\n\t    \td = obj_udRoundBox(p + .01 * sin(TIME));\n\t}\n  \n\tif (f < maxd) { // cube\n\t\tvec3 col = vec3(abs(sin(TIME))*.2+.5, abs(sin(TIME-3.1416/8.))*.2+.5, abs(sin(TIME+3.1416/8.))*.2+.5);\n\t\tvec3 n = vec3(d - obj_udRoundBox(p - e.xyy * cos(TIME+p.y)), d - obj_udRoundBox(p - e.yxy * cos(TIME-p.x)), d - obj_udRoundBox(p - e.yyx));\n\t\tfloat b = dot(normalize(n), normalize(camPos - p));\n\t\tgl_FragColor=vec4((p*-b*col + pow(b, 16.))*(1. - f*.01), 1.);\n\t} else { // background, thanks to: http://glsl.heroku.com/e#15441.0\n\t\t\n\t\tgl_FragColor = spuke(mix ( vec4(vec3(p*15.), 1.), vec4(0.), .5 * sin(TIME)));\n\t}\n}\n ","Inlets":[],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":5,"Metadata":{"ScriptingName":"AcidAtTheDisco","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-734.5585490997887,186.63073766611055],"Size":[132.328125,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"AcidAtTheDisco by Author\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t\t], \n\t\"DESCRIPTION\": \"https://www.shadertoy.com/view/4sfXRB\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t}\n\t]\n}*/\n\t// https://www.shadertoy.com/view/4sfXRB\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / RENDERSIZE.xy;\n\tfloat time = TIME;\n\tfloat depth = sin(uv.y*2.0+sin(time)*1.5+1.0+sin(uv.x*3.0+time*1.2))*cos(uv.y*2.0+time)+sin((uv.x*3.0+time));\n\tfloat texey = (uv.x-0.5);\n\tfloat xband = sin(sqrt(uv.y/uv.y)*16.0/(depth)+time*3.0);\n\tfloat final = (\n\t\tsin(texey/abs(depth)*32.0+time*16.0+sin(uv.y*uv.x*32.0*sin(depth*3.0)))*(depth)*xband\n\t);\n\n\t\n\tfragColor = vec4(-final*abs(sin(time)),(-final*sin(time)*2.0),(final),1.0)*1.5;\n}\nvoid main(void) { mainImage(gl_FragColor, gl_FragCoord.xy); }","Inlets":[{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[294.3999938964844,403.1999816894531]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":4,"Metadata":{"ScriptingName":"130187","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-742.4417811041221,-157.8220778032035],"Size":[77.25,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"130187 by Unknown\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.0,\n\t\t\t\"MAX\" : 1.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// glsl.heroku.come#13018.7\n#define LINES 8.0\n#define BRIGHTNESS 0.5\n\nconst vec3 ORANGE = vec3(1.4, 0.8, 0.4);\nconst vec3 BLUE = vec3(0.5, 0.9, 1.3);\nconst vec3 GREEN = vec3(0.9, 1.4, 0.4);\nconst vec3 RED = vec3(1.8, 0.4, 0.3);\n\nvoid main() {\n    float x, y, xpos, ypos;\n    float t = TIME * 10.0;\n    vec3 c = vec3(0.0);\n\n    xpos = iZoom * gl_FragCoord.x / RENDERSIZE.x;\n    ypos = iZoom * gl_FragCoord.y / RENDERSIZE.y;\n    //xpos -= 0.0;\n    //ypos -= 0.0;gl_FragCoord.xy / RENDERSIZE.xy\n    x = xpos;\n    for (float i = 0.0; i < LINES; i += 1.0) {\n        for(float j = 0.0; j < 2.0; j += 1.0){\n            y = ypos\n            + (0.30 * sin(x * 2.000 +( i * 1.5 + j) * 0.4 + t * 0.050)\n               + 0.100 * cos(x * 6.350 + (i  + j) * 0.7 + t * 0.050 * j)\n               + 0.024 * sin(x * 12.35 + ( i + j * 4.0 ) * 0.8 + t * 0.034 * (8.0 *  j))\n               + 0.5);\n            \n            c += vec3(1.0 - pow(clamp(abs(1.0 - y) * 5.0, 0.0,1.0), 0.25));\n        }\n    }\n    \n    c *= mix(\n             mix(ORANGE, BLUE, xpos)\n             , mix(GREEN, RED, xpos)\n             ,(sin(t * 0.02) + 1.0) * 0.45\n             ) * BRIGHTNESS;\n    \n    gl_FragColor = vec4(c, 1.0);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":2,"Metadata":{"ScriptingName":"128690","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[-728.8077458319194,-512.40716598371],"Size":[77.25,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"12869.0 by Unknown\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"iChannel0\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.0,\n\t\t\t\"MAX\" : 1.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// glsl.heroku.come#12869.0\n\n#define POINTS 10.0\n#define RADIUS 100.0\n#define BRIGHTNESS 0.95\n#define COLOR vec3(0.7, 0.9, 1.2)\n#define SMOOTHNESS 2.5\n\n#define LAG_A 2.325\n#define LAG_B 3.825\n#define LAG_C 8.825\n\nvec2 getPoint(float n) {\n\tfloat t = TIME * 0.1;\n\t//vec2 center = RENDERSIZE.xy / 2.0;\n\tvec2 center = gl_FragCoord.xy / 2.0;\n\tvec2 p = (\n\t\t  vec2(100.0, 0.0) * sin(t *  2.5 + n * LAG_A)\n\t\t+ vec2(0.0, 100.0) * sin(t * -1.5 + n * LAG_B)\n\t\t+ vec2(20.0, 50.0) * cos(t * 0.05 + n * LAG_C)\n\t\t+ vec2(50.0, 10.0) * sin(t * 0.15 + n)\n\t);\n\treturn center + p;\n}\n\nvoid main() {\n\tvec2 uv = gl_FragCoord.xy - iMouse.xy;// - 0.5;\n\tuv.x *= float(RENDERSIZE.x )/ float(RENDERSIZE.y);\n\tfloat b = 0.0;\n\t\n\tfor (float i = 0.0; i < POINTS; i += 1.0) {\n\t\tvec2 p = getPoint(i);\n\t\tfloat d = 1.0 - clamp(distance(p, uv) / RADIUS, 0.0, 1.0);\n\t\tb += pow(d, SMOOTHNESS);\n\t}\n\t\n\tvec3 c = b + (\n\t\t  (sin(b * 30.0) - 1.0) * vec3(0.1, 0.4, 0.15)\n\t\t+ (cos(b * 10.0) + 1.0) * vec3(0.8, 0.5, 0.25)\n\t);\n\t\n\tgl_FragColor = vec4(c * BRIGHTNESS * COLOR, 1.0);\n}\n\n\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"8093743c-584f-4bb9-97d4-6c7602f87116","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":1,"Metadata":{"ScriptingName":"Video Mixer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[269.6192000000001,-249.44159999999988],"Size":[108.890625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Address":"osc (boli):/artnet/ch/4","Value":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Value":{"Float":0.7155852317810059},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Address":"osc (boli):/artnet/ch/21","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Value":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":37,"Metadata":{"ScriptingName":"Flip V","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":12377150852,"Height":300.0,"StartOffset":0,"LoopDuration":12377150852,"Pos":[75.85874326979979,-387.9823858737848],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Geometry Adjustment\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t}\n\t]\n}*/\n\nvoid main() {\n\tvec2\t\tnormSrcCoord;\n\n\tnormSrcCoord.x = isf_FragNormCoord[0];\n\tnormSrcCoord.y = isf_FragNormCoord[1];\n\n\tnormSrcCoord.y = (1.0-normSrcCoord.y);\n\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage, normSrcCoord);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false,"Address":"lightwarrior Layer One:/"}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]}],"SmallViewRack":[{"Processes":[1,2,4,5,8,9,10,11,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,37,38],"Process":null,"Height":1597.0,"Nodal":true}],"FullViewRack":[{"Process":0,"Nodal":true}],"DefaultDuration":12377150852,"MinDuration":12377150852,"MaxDuration":12377150852,"GuiDuration":13032745937,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":2,"EndState":3,"StartDate":323649148,"HeightPercentage":0.08066666666666666,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":true,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":1,"Metadata":{"ScriptingName":"Interval.swag5","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[],"SmallViewRack":[],"FullViewRack":[],"DefaultDuration":323649148,"MinDuration":323649148,"MaxDuration":323649148,"GuiDuration":356014062,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":1,"EndState":2,"StartDate":0,"HeightPercentage":0.08066666666666666,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":false,"HasSignature":false}],"Comments":[]}],"SmallViewRack":[{"Processes":[38],"Process":null,"Height":200.0,"Nodal":true}],"FullViewRack":[{"Process":1,"Nodal":false},{"Process":0,"Nodal":true}],"DefaultDuration":10584000000,"MinDuration":10584000000,"MaxDuration":11113200000,"GuiDuration":12088476878,"Speed":1.0,"Rigidity":false,"MinNull":false,"MaxInf":true,"Signatures":[[0,[4,4]]],"StartState":0,"EndState":1,"StartDate":0,"HeightPercentage":0.0,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":15120000.0,"Center":4700240078,"ViewMode":0,"SmallViewShown":true,"HasSignature":true},"StartTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},"EndTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.end","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":10584000000,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":true,"Expression":" { true == false } "},"StartEvent":{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0],"Condition":"","Date":0,"Offset":0},"EndEvent":{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.end","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[1],"Condition":"","Date":10584000000,"Offset":0},"StartState":{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":0,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},"EndState":{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.end","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":0,"NextConstraint":null,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}},"Speed":1.0,"Cables":[{"ObjectName":"Process::Cable","id":1,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":2},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":2,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":4},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":3,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":5},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":4,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":10},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":5,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":9},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":4}]},{"ObjectName":"Process::Cable","id":6,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":11},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":5}]},{"ObjectName":"Process::Cable","id":7,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":12},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":6}]},{"ObjectName":"Process::Cable","id":8,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":8},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Inlet","ObjectId":7}]},{"ObjectName":"Process::Cable","id":11,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":13},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":34,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":24},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":30},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":12,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":17},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":15,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":16},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":17},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":14,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":16},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":16,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":17},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":25},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":17,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":25},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":26},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":18,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":26},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":27},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":19,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":27},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":28},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":20,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":28},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":29},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":21,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":29},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":30},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":22,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":30},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":31},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":23,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":17},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":21},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":24,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":21},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":25},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":25,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":25},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":20},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":26,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":20},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":26},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":27,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":26},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":23},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":28,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":23},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":27},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":29,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":27},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":18},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":30,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":18},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":28},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":31,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":28},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":32,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":29},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":33,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":29},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":24},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":35,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":31},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":32},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":36,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":31},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":34},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":37,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":34},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":32},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":38,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":37},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":39,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":38},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":1}]}],"BusIntervals":[]},"Plugins":[{"uuid":"1f923578-08c3-49be-9ba9-69c144ee2e32","Refresh":false,"Reconnect":false,"MidiRatio":1.0},{"uuid":"6e610e1f-9de2-4c36-90dd-0ef570002a21","RootNode":{},"Children":[{"Device":{"Name":"Window","Protocol":"5a181207-7d40-4ad8-814e-879fcdf8cc31"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":1},"Domain":{"Int":{"Min":0,"Max":100}},"Name":"screen"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[1920.0,0.0]},"Domain":{},"Name":"position"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"cursor"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[0.0,0.0],"Values":[[],[]]}},"Name":"absolute"}}]},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"tablet"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1280.0,720.0],"Values":[[],[]]}},"Name":"absolute"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"z"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"pressure"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}},"Name":"tangential"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-180.0,"Max":180.0}},"Name":"rotation"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_x"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_y"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[1280.0,720.0]},"Domain":{},"Name":"size"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{},"Extended":{"description":"Set to [0, 0] to use the viewport's size"},"Name":"rendersize"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"key"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"code"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"String":""},"Domain":{},"Name":"text"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Bool":false},"Domain":{},"Name":"fullscreen"}}]},{"Device":{"Name":"lightwarrior Layer One","Protocol":"8062b2e5-c589-41f1-8977-96c5ba782f95","Path":"/tmp/lightwarrior_layer_one"}},{"Device":{"Name":"osc (boli)","Protocol":"9a42de4b-f6eb-4bca-9564-01b975f601b9","Config":{"Mode":1,"Version":0,"Framing":1,"Transport":{"UDP":{"Local":{"Host":"0.0.0.0","Port":9996,"Broadcast":false},"Remote":{"Host":"127.0.0.1","Port":6666,"Broadcast":false}}}}},"Children":[{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"artnet"},"Children":[{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"ch"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"1"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"2"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"3"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"4"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"5"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"6"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"7"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"8"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"9"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"10"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"11"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"12"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"13"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"14"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"15"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"16"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"17"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"18"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"19"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"20"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"24"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"25"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"26"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"27"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"28"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"29"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"30"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"31"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"32"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"33"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"34"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"35"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"36"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"37"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"38"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"39"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"40"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"41"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"42"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"43"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"44"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"45"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"46"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"47"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"48"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"49"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"50"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"51"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"52"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"53"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"54"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"55"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"56"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"57"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"58"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"59"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"60"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"61"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"62"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"63"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"64"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"65"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"66"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"67"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"68"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"69"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"70"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"71"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"72"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"76"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"77"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"78"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"79"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"80"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"81"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"82"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"83"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"84"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"85"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"86"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"87"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"88"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"89"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"90"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"91"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"92"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"93"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"94"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"95"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"96"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"97"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"98"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"99"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":1.0},"Domain":{},"Name":"21"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.12156862765550613},"Domain":{},"Name":"22"}}]}]}]},{"Device":{"Name":"Lightwarrior Layer Two","Protocol":"8062b2e5-c589-41f1-8977-96c5ba782f95","Path":"/tmp/lightwarrior_layer_two"}}]},{"uuid":"58c9e19a-fde3-47d0-a121-35853fec667d","Groups":{"GroupList":[{"ObjectName":"Group","id":0,"Name":"all","Clients":[]}]},"Policy":{"SessionId":1234,"LocalClient":{"ObjectName":"Client","id":0,"Name":"Master"}},"Intervals":[],"Events":[],"Syncs":[],"Processes":[]}],"Version":4,"Commit":"e0676c9fe340df3975ccde2a098cfa15610fff3f","Tag":"3.2.4"}