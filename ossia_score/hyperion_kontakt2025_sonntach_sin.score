{"Document":{"ObjectName":"Scenario::ScenarioDocumentModel","id":1,"BaseScenario":{"ObjectName":"Scenario::BaseScenario","id":0,"Constraint":{"ObjectName":"Scenario::IntervalModel","id":0,"Metadata":{"ScriptingName":"hyperion_kontakt2025_sonntach_sin","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"de035912-5b03-49a8-bc4d-b2cba68e21d9","ObjectName":"Scenario","id":1,"Metadata":{"ScriptingName":"Scenario.1","Comment":"","Color":"Transparent1","Label":"","Touched":false},"Duration":10584000000,"Height":1500.0,"StartOffset":0,"LoopDuration":10584000000,"Pos":[40.0,40.0],"Size":[200.0,100.0],"Loops":false,"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"In","Exposed":"in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"StartTimeNodeId":0,"StartEventId":0,"StartStateId":0,"Exclusive":false,"TimeNodes":[{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.dons4","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":547644552,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "},{"ObjectName":"Scenario::TimeSyncModel","id":2,"Metadata":{"ScriptingName":"Sync.bike28","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":16020992379,"Events":[2],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":false,"Expression":" { true == false } "}],"Events":[{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0],"Condition":"","Date":0,"Offset":0},{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.foot17","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[1,4],"Condition":"","Date":547644552,"Offset":0},{"ObjectName":"Scenario::EventModel","id":2,"Metadata":{"ScriptingName":"Event.ncaa57","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":2,"States":[2,5],"Condition":"","Date":16020992379,"Offset":0}],"States":[{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":1,"HeightPercentage":0.19466666666666663,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.dice88","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":1,"NextConstraint":2,"HeightPercentage":0.19466666666666663,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":2,"Metadata":{"ScriptingName":"State.tang38","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":2,"PreviousConstraint":2,"NextConstraint":null,"HeightPercentage":0.19466666666666663,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":4,"Metadata":{"ScriptingName":"State.peal36","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":3,"NextConstraint":null,"HeightPercentage":0.07466666666666667,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},{"ObjectName":"Scenario::StateModel","id":5,"Metadata":{"ScriptingName":"State.mira83","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":2,"PreviousConstraint":null,"NextConstraint":3,"HeightPercentage":0.07466666666666667,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}],"Constraints":[{"ObjectName":"Scenario::IntervalModel","id":1,"Metadata":{"ScriptingName":"Interval.heir58","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[],"SmallViewRack":[],"FullViewRack":[],"DefaultDuration":547644552,"MinDuration":547644552,"MaxDuration":547644552,"GuiDuration":6559996978,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":0,"EndState":1,"StartDate":0,"HeightPercentage":0.19466666666666663,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"ViewMode":0,"SmallViewShown":false,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":2,"Metadata":{"ScriptingName":"Video Mixer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Inlet":{"uuid":"a1574bb0-cbd4-4c7d-9417-0c25cfd1187b","ObjectName":"Inlet","id":0,"Hidden":false,"Custom":"Audio in","Exposed":"audio in"},"Outlet":{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true},"Processes":[{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":39,"Metadata":{"ScriptingName":"Turbulent Shapes","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[806.3279842894217,932.3323759138434],"Size":[141.046875,22.0],"Loops":false,"Vertex":"","Fragment":"// SaturdayShader Week 28 :\n// by Joseph Fiola (http://www.joefiola.com)\n// 2016-02-27\n\n// This is a remix of Patricio Gonzalez Vivo's\n// VectorField - http://patriciogonzalezvivo.github.io/glslEditor/?log=160224011512\n// and @kyndinfo's Distance Field Transitions http://thebookofshaders.com/edit.html?log=160131053646\n\n/*{\n\t\"CREDIT\": \"Joseph Fiola, based on work by Patricio Gonzalez and @kyndinfo\",\n\t\"DESCRIPTION\": \"\",\n\t\"CATEGORIES\": [\n\t\t\"Generator\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"zoom\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 20.0,\n\t\t\t\"MIN\": 1.0,\n\t\t\t\"MAX\": 60.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"scale\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.25,\n\t\t\t\"MIN\": -4.0,\n\t\t\t\"MAX\": 4.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"spin\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.25,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 10.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"turbulanceSpeed\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.3,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 2.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"turbulanceZoom\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.1,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"shape\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 8.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"shapeShiftSpeed\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.3,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 8.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"rotateCanvas\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"centerTile\",\n\t\t\t\"TYPE\": \"bool\",\n\t\t\t\"DEFAULT\": true\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"pos\",\n\t\t\t\"TYPE\": \"point2D\",\n\t\t\t\"DEFAULT\": [0.5,0.5],\n\t\t\t\"MIN\":[0.0,0.0],\n\t\t\t\"MAX\":[1.0,1.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"posOffset\",\n\t\t\t\"TYPE\": \"point2D\",\n\t\t\t\"DEFAULT\": [0.5,0.5],\n\t\t\t\"MIN\":[0.0,0.0],\n\t\t\t\"MAX\":[1.0,1.0]\n\t\t}\n\t]\n}*/\n\n\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nfloat smoothedge(float v) {\n    return smoothstep(0.0, 1.0 / RENDERSIZE.x, v) * -1.0 +1.0;\n}\n\nfloat circle(vec2 p, float radius) {\n  return length(p) - radius;\n}\n\nfloat ring(vec2 p, float radius, float width) {\n  return abs(length(p) - radius) - width;\n}\n\n//http://thndl.com/square-shaped-shaders.html\nfloat polygon(vec2 p, int vertices, float size) {\n    float a = atan(p.x, p.y) + 0.2;\n    float b = 6.28319 / float(vertices);\n    return cos(floor(0.5 + a / b) * b - a) * length(p) - size;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 3.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat getShape(vec2 fpos, int i, float scale) {\n    if (i == 0) {\n        return polygon(fpos, 2, scale); //rectangle\n    } else if (i == 1) {\n        return polygon(fpos, 1, scale); //line\n    } else if (i == 2) {\n        return polygon(fpos, 3, scale); //triangle\n    } else if (i == 3) {\n        return polygon(fpos, 4, scale); //square\n    } else if (i == 4) {\n        return polygon(fpos, 6, scale); //hexagon\n    } else if (i == 5) {\n        return circle(fpos, scale);\t\t//circle\n    } else if (i == 6) {\n        return ring(fpos, scale,scale*0.25); //ring1\n    } else if (i ==7) {\n        return ring(fpos, scale * 2.0 ,scale); //ring2\n\t} else {\n        return polygon(fpos, 4, scale); //square\n    }\n}\n\nvoid main() {\n    vec2 st = gl_FragCoord.xy/RENDERSIZE.xy;\n   \tst -= vec2(pos);\n\tst.x *= RENDERSIZE.x/RENDERSIZE.y;\n\n    st = rotate2d(rotateCanvas*-TWO_PI) * st; \n\n\n    st *= zoom; // Scale the coordinate system by 10\n    \n   \tif (centerTile) st+=0.5; // centers tile\n\n    vec2 ipos = floor(st);  // get the integer coords\n    vec2 fpos = fract(st);  // get the fractional coords\n    \n    float angle = snoise(ipos*turbulanceZoom+TIME*turbulanceSpeed)*spin;\n    float scale = snoise(ipos*turbulanceZoom+TIME*turbulanceSpeed)*scale;\n    \n    fpos -= posOffset;\n    fpos = rotate2d(angle*PI)* fpos;\n\n    float t0 = mod(shape + TIME * shapeShiftSpeed, 9.0);\n    float t1 = mod(shape + TIME * shapeShiftSpeed + 1.0, 9.0);\n    int i0 = int(floor(t0));\n    int i1 = int(floor(t1));\n    float f = fract(t0);\n    \n    vec3 color = vec3(smoothedge(mix(getShape(fpos, i0, scale), getShape(fpos, i1, scale), f)));\n\n    gl_FragColor = vec4(color,1.0);\n}\n\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"zoom","Exposed":"zoom","Value":{"Float":60.0},"Init":{"Float":20.0},"Domain":{"Float":{"Min":1.0,"Max":60.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"scale","Exposed":"scale","Value":{"Float":0.4137931168079376},"Init":{"Float":0.25},"Domain":{"Float":{"Min":-4.0,"Max":4.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"spin","Exposed":"spin","Value":{"Float":0.0},"Init":{"Float":0.25},"Domain":{"Float":{"Min":0.0,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"turbulanceSpeed","Exposed":"turbulancespeed","Value":{"Float":0.30000001192092896},"Init":{"Float":0.30000001192092896},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"turbulanceZoom","Exposed":"turbulancezoom","Value":{"Float":1.0},"Init":{"Float":0.10000000149011612},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"shape","Exposed":"shape","Value":{"Float":1.342187762260437},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":8.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"shapeShiftSpeed","Exposed":"shapeshiftspeed","Value":{"Float":3.742187738418579},"Init":{"Float":0.30000001192092896},"Domain":{"Float":{"Min":0.0,"Max":8.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"rotateCanvas","Exposed":"rotatecanvas","Value":{"Float":0.7413793206214905},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"centerTile","Exposed":"centertile","Value":{"Bool":true},"Init":{"Bool":true},"Domain":{"Bool":null}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"pos","Exposed":"pos","Value":{"Vec2f":[0.5,0.7583096027374268]},"Init":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"posOffset","Exposed":"posoffset","Value":{"Vec2f":[0.5,0.5]},"Init":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":33,"Metadata":{"ScriptingName":"Video Mixer.2","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[803.3456770108882,425.46347539413216],"Size":[117.671875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Value":{"Float":0.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":2},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":32,"Metadata":{"ScriptingName":"Flip V","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[926.144921431196,-114.93804210586018],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Geometry Adjustment\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t}\n\t]\n}*/\n\nvoid main() {\n\tvec2\t\tnormSrcCoord;\n\n\tnormSrcCoord.x = isf_FragNormCoord[0];\n\tnormSrcCoord.y = isf_FragNormCoord[1];\n\n\tnormSrcCoord.y = (1.0-normSrcCoord.y);\n\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage, normSrcCoord);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":31,"Metadata":{"ScriptingName":"Flip H","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[683.4179842894216,-104.88857004938916],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\": \"by VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Geometry Adjustment\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\": \"image\"\n\t\t}\n\t]\n}*/\n\nvoid main() {\n\tvec2\t\tnormSrcCoord;\n\n\tnormSrcCoord.x = isf_FragNormCoord[0];\n\tnormSrcCoord.y = isf_FragNormCoord[1];\n\n\tnormSrcCoord.x = (1.0-normSrcCoord.x);\n\n\tgl_FragColor = IMG_NORM_PIXEL(inputImage, normSrcCoord);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":30,"Metadata":{"ScriptingName":"bars","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[561.4179842894216,435.1114299506109],"Size":[75.0,22.0],"Loops":false,"Vertex":"void main() {\n  isf_vertShaderInit();\n}\n","Fragment":"/*{\n  \"DESCRIPTION\": \"Horizontal and vertical bars with controllable thickness, length, position, and color.\",\n  \"CATEGORIES\": [\"Bars\", \"Utility\"],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"barColor\",\n      \"TYPE\": \"color\",\n      \"DEFAULT\": [1.0, 1.0, 1.0, 1.0]\n    },\n    {\n      \"NAME\": \"hPos\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.5,\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Horizontal Bar Y Position\"\n    },\n    {\n      \"NAME\": \"hThickness\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.05,\n      \"MIN\": 0.001,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Horizontal Bar Thickness\"\n    },\n    {\n      \"NAME\": \"hLength\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 1.0,\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Horizontal Bar Length\"\n    },\n    {\n      \"NAME\": \"vPos\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.5,\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Vertical Bar X Position\"\n    },\n    {\n      \"NAME\": \"vThickness\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.05,\n      \"MIN\": 0.001,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Vertical Bar Thickness\"\n    },\n    {\n      \"NAME\": \"vLength\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 1.0,\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Vertical Bar Length\"\n    }\n  ]\n}*/\n\nvoid main() {\n  vec2 uv = isf_FragNormCoord;\n  vec4 color = vec4(0.0);\n\n  // Horizontal bar\n  float hTop = hPos + hThickness / 2.0;\n  float hBottom = hPos - hThickness / 2.0;\n  float hLeft = 0.5 - hLength / 2.0;\n  float hRight = 0.5 + hLength / 2.0;\n\n  // Vertical bar\n  float vLeft = vPos - vThickness / 2.0;\n  float vRight = vPos + vThickness / 2.0;\n  float vTop = 0.5 + vLength / 2.0;\n  float vBottom = 0.5 - vLength / 2.0;\n\n  bool inHorizontalBar = uv.y >= hBottom && uv.y <= hTop && uv.x >= hLeft && uv.x <= hRight;\n  bool inVerticalBar = uv.x >= vLeft && uv.x <= vRight && uv.y >= vBottom && uv.y <= vTop;\n\n  if (inHorizontalBar || inVerticalBar) {\n    color = barColor;\n  }\n\n  gl_FragColor = color;\n}\n","Inlets":[{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"barColor","Exposed":"barcolor","Value":{"Vec4f":[0.45545127987861633,0.45317769050598145,1.0,1.0]},"Init":{"Vec4f":[1.0,1.0,1.0,1.0]},"Domain":{}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"hPos","Exposed":"hpos","Value":{"Float":1.0},"Init":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"hThickness","Exposed":"hthickness","Value":{"Float":0.0010000000474974513},"Init":{"Float":0.05000000074505806},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"hLength","Exposed":"hlength","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"vPos","Exposed":"vpos","Value":{"Float":0.39633333683013916},"Init":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"vThickness","Exposed":"vthickness","Value":{"Float":0.0010000000474974513},"Init":{"Float":0.05000000074505806},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"vLength","Exposed":"vlength","Value":{"Float":0.8833333253860474},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":28,"Metadata":{"ScriptingName":"lines","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[1035.0207115621488,98.24442995061088],"Size":[75.0,22.0],"Loops":false,"Vertex":"void main() {\n  isf_vertShaderInit();\n}","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Geometry\"\n    ],\n    \"CREDIT\": \"by VIDVOX\",\n    \"INPUTS\": [\n        {\n            \"DEFAULT\": 0.5,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"spacing\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.05,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"line_width\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.25,\n            \"MAX\": 1,\n            \"MIN\": -1,\n            \"NAME\": \"angle\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"MAX\": 1,\n            \"MIN\": 0,\n            \"NAME\": \"shift\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": [\n                1,\n                1,\n                1,\n                1\n            ],\n            \"NAME\": \"color1\",\n            \"TYPE\": \"color\"\n        },\n        {\n            \"DEFAULT\": [\n                0,\n                0,\n                0,\n                1\n            ],\n            \"NAME\": \"color2\",\n            \"TYPE\": \"color\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n\nconst float pi = 3.14159265359;\n\n\nfloat pattern() {\n\tfloat s = sin(angle * pi);\n\tfloat c = cos(angle * pi);\n\tvec2 tex = isf_FragNormCoord * RENDERSIZE;\n\tfloat spaced = RENDERSIZE.y * spacing;\n\tvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * max(1.0/spaced,0.001);\n\tfloat d = point.y;\n\tfloat w = line_width;\n\tif (w > spacing)\t{\n\t\tw = 0.99*spacing;\t\n\t}\n\treturn ( mod(d + shift*spacing + w * 0.5,spacing) );\n}\n\n\nvoid main() {\n\t//\tdetermine if we are on a line\n\t//\tmath goes something like, figure out distance to the closest line, then draw color2 if we're within range\n\t//\ty = m*x + b\n\t//\tm = (y1-y0)/(x1-x0) = tan(angle)\n\t\n\tvec4 out_color = color2;\n\tfloat w = line_width;\n\tif (w > spacing)\t{\n\t\tw = 0.99*spacing;\t\n\t}\n\tfloat pat = pattern();\n\tif ((pat > 0.0)&&(pat <= w))\t{\n\t\tfloat percent = (1.0-abs(w-2.0*pat)/w);\n\t\tpercent = clamp(percent,0.0,1.0);\n\t\tout_color = mix(color2,color1,percent);\n\t}\n\t\n\tgl_FragColor = out_color;\n}","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"spacing","Exposed":"spacing","Value":{"Float":1.0},"Init":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"line_width","Exposed":"line_width","Value":{"Float":0.31578946113586426},"Init":{"Float":0.05000000074505806},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"angle","Exposed":"angle","Value":{"Float":-0.5},"Init":{"Float":0.25},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"shift","Exposed":"shift","Value":{"Float":0.9210526347160339},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"color1","Exposed":"color1","Value":{"Vec4f":[1.0,1.0,1.0,1.0]},"Init":{"Vec4f":[1.0,1.0,1.0,1.0]},"Domain":{}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"color2","Exposed":"color2","Value":{"Vec4f":[0.0,0.0,0.0,1.0]},"Init":{"Vec4f":[0.0,0.0,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":26,"Metadata":{"ScriptingName":"52.37","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[-105.01686491911516,-71.71607993961629],"Size":[75.0,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Automatically Converted\",\n        \"Shadertoy\"\n    ],\n    \"DESCRIPTION\": \"Automatically converted from https://www.shadertoy.com/view/fdV3zW by supah.  Disco lights\",\n    \"IMPORTED\": {\n    },\n    \"INPUTS\": [\n        {\n            \"DEFAULT\": 28.9,\n            \"LABEL\": \"permuteRate\",\n            \"MAX\": 50,\n            \"MIN\": -50,\n            \"NAME\": \"permuteRate\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 7,\n            \"LABEL\": \"gFactor\",\n            \"MAX\": 50,\n            \"MIN\": -50,\n            \"NAME\": \"gFactor\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 2.2,\n            \"LABEL\": \"fadeFactor\",\n            \"MAX\": 5,\n            \"MIN\": -5,\n            \"NAME\": \"fadeFactor\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 2.2,\n            \"LABEL\": \"amp\",\n            \"MAX\": 5,\n            \"MIN\": -5,\n            \"NAME\": \"amp\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 34,\n            \"LABEL\": \"smoothing\",\n            \"MAX\": 50,\n            \"MIN\": -50,\n            \"NAME\": \"smoothing\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"LABEL\": \"xPos\",\n            \"MAX\": 1,\n            \"MIN\": -1,\n            \"NAME\": \"xPos\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.2,\n            \"LABEL\": \"yPos\",\n            \"MAX\": 1,\n            \"MIN\": -1,\n            \"NAME\": \"yPos\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.02,\n            \"LABEL\": \"zPos\",\n            \"MAX\": 1,\n            \"MIN\": -1,\n            \"NAME\": \"zPos\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"LABEL\": \"yPosNoise\",\n            \"MAX\": 3,\n            \"MIN\": -1,\n            \"NAME\": \"yPosNoise\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.5,\n            \"LABEL\": \"uvPos\",\n            \"MAX\": 3,\n            \"MIN\": -3,\n            \"NAME\": \"uvPos\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.3,\n            \"LABEL\": \"lumi\",\n            \"MAX\": 1.01,\n            \"MIN\": 0.09,\n            \"NAME\": \"lumi\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 30,\n            \"LABEL\": \"numPlots\",\n            \"MAX\": 100,\n            \"MIN\": 1,\n            \"NAME\": \"numPlots\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0,\n            \"LABEL\": \"rotation\",\n            \"MAX\": 6.28,\n            \"MIN\": -6.28,\n            \"NAME\": \"rotation\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": 0.0073,\n            \"LABEL\": \"cut\",\n            \"MAX\": 0.05,\n            \"MIN\": 0.001,\n            \"NAME\": \"cut\",\n            \"TYPE\": \"float\"\n        },\n        {\n            \"DEFAULT\": [\n                1,\n                1,\n                1,\n                1\n            ],\n            \"LABEL\": \"color\",\n            \"MAX\": [\n                1,\n                1,\n                1,\n                1\n            ],\n            \"MIN\": [\n                0,\n                0,\n                0,\n                1\n            ],\n            \"NAME\": \"color\",\n            \"TYPE\": \"color\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n\n// float permuteRate = 289.; // 289.\n// float gFactor = 7.; // 7.\n// float fadeFactor = 2.2; // 2.2\n// float amp = 2.2; // 2.2\n// float smoothing = 34.; // 34.0\n// float xPos = .5; // 0.5\n// float yPos = .2; // 0.2\n// float zPos = 0.02; // 0.02\n// float yPosNoise = .5; // 0.5\n// float uvPos = 0.5; // 0.5\n// float lumi = 0.3; // 0.3\n// float numPlots = 30.; // 30.\n// float cut = 0.0073; // 0.0073\n\nmat2 rotate(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvec4 permute(vec4 x) {\n    return mod(((x * smoothing) + 1.) * x, permuteRate);\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    // return 1.79284291400159 - 0.85373472095314 * r;\n    return (1.79284291400159 - 0.85373472095314 * r) * amp;\n}\n\nvec3 fade(vec3 t) {\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\n  Pi0 = mod(Pi0, permuteRate);\n  Pi1 = mod(Pi1, permuteRate);\n\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / gFactor;\n  vec4 gy0 = fract(floor(gx0) / gFactor) - yPosNoise;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(yPosNoise) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - yPosNoise);\n  gy0 -= sz0 * (step(0.0, gy0) - yPosNoise);\n\n  vec4 gx1 = ixy1 / gFactor;\n  vec4 gy1 = fract(floor(gx1) / gFactor) - yPosNoise;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(yPosNoise) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - yPosNoise);\n  gy1 -= sz1 * (step(0.0, gy1) - yPosNoise);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return fadeFactor * n_xyz;\n}\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct - cut, pct, st.y) -\n          smoothstep( pct, pct + cut, st.y);\n}\n\nvoid main() {\n\n    vec2 uv =(gl_FragCoord.xy - 0.5 * RENDERSIZE.xy)/RENDERSIZE.y; // -uvPos <> uvPos\n    uv *= rotate(rotation);\n    vec3 col = vec3(0.);\n    for (float i = 0.; i < numPlots; i += 1.) {\n        float inc = i / numPlots;\n\n        float px = smoothstep(xPos, 0., .4 * length(uv)) * 4. + TIME;\n        float py = yPos * TIME + yPos * uv.x;\n        vec3 P = vec3(px, py, -i * zPos);\n\n        float l = plot(uv * uvPos, 0.13 * cnoise(P));\n\n        vec3 c = mix(vec3(color.r, uv.x + uvPos * color.g, 1. - uv.x * color.b), vec3(uv.x + uvPos, color.g, uvPos - uv.x), inc);\n\n        col += vec3(l * c * lumi);\n    }\n    \n    // Output to screen\n    gl_FragColor = vec4(col, 1.);\n}\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"permuteRate","Exposed":"permuterate","Value":{"Float":28.899999618530273},"Init":{"Float":28.899999618530273},"Domain":{"Float":{"Min":-50.0,"Max":50.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"gFactor","Exposed":"gfactor","Value":{"Float":7.0},"Init":{"Float":7.0},"Domain":{"Float":{"Min":-50.0,"Max":50.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"fadeFactor","Exposed":"fadefactor","Value":{"Float":2.200000047683716},"Init":{"Float":2.200000047683716},"Domain":{"Float":{"Min":-5.0,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"amp","Exposed":"amp","Value":{"Float":2.200000047683716},"Init":{"Float":2.200000047683716},"Domain":{"Float":{"Min":-5.0,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"smoothing","Exposed":"smoothing","Value":{"Float":34.0},"Init":{"Float":34.0},"Domain":{"Float":{"Min":-50.0,"Max":50.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"xPos","Exposed":"xpos","Value":{"Float":0.5},"Init":{"Float":0.5},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"yPos","Exposed":"ypos","Value":{"Float":0.20000000298023224},"Init":{"Float":0.20000000298023224},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"zPos","Exposed":"zpos","Value":{"Float":0.019999999552965164},"Init":{"Float":0.019999999552965164},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"yPosNoise","Exposed":"yposnoise","Value":{"Float":0.5},"Init":{"Float":0.5},"Domain":{"Float":{"Min":-1.0,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"uvPos","Exposed":"uvpos","Value":{"Float":0.5},"Init":{"Float":0.5},"Domain":{"Float":{"Min":-3.0,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"lumi","Exposed":"lumi","Value":{"Float":0.30000001192092896},"Init":{"Float":0.30000001192092896},"Domain":{"Float":{"Min":0.09000000357627869,"Max":1.0099999904632568}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"numPlots","Exposed":"numplots","Value":{"Float":30.0},"Init":{"Float":30.0},"Domain":{"Float":{"Min":1.0,"Max":100.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"rotation","Exposed":"rotation","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":-6.28000020980835,"Max":6.28000020980835}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"cut","Exposed":"cut","Value":{"Float":0.007300000172108412},"Init":{"Float":0.007300000172108412},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":0.05000000074505806}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"color","Exposed":"color","Value":{"Vec4f":[1.0,1.0,1.0,1.0]},"Init":{"Vec4f":[1.0,1.0,1.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":25,"Metadata":{"ScriptingName":"Trigonometric2","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[-83.51334633213719,433.7342719190815],"Size":[128.125,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*{\n  \"CREDIT\": \"by mojovideotech\",\n  \"CATEGORIES\": [\n  \t\"generator\",\n    \"procedural\",\n    \"2d\",\n    \"trigonometric\"\n  ],\n  \"DESCRIPTION\": \"from https://www.shadertoy.com/view/Mdl3RH by iq.  Trigonometric iterations. Or, some abstract stuff inspired made after Pickover's popcorn formulas.\",\n  \"INPUTS\": [\n    {\n      \"MAX\": [\n        10,\n        10\n      ],\n      \"MIN\": [\n        -10,\n        -10\n      ],\n      \"DEFAULT\": [\n        0.5,\n        0.4\n      ],\n      \"NAME\": \"matrix\",\n      \"TYPE\": \"point2D\"\n    },\n    {\n      \"NAME\": \"seed1\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 250,\n      \"MIN\": 10,\n      \"MAX\": 500\n    },\n    {\n      \"NAME\": \"seed2\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 45,\n      \"MIN\": 1,\n      \"MAX\": 50\n    },\n    {\n      \"NAME\": \"offset1\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": -1,\n      \"MIN\": -3,\n      \"MAX\": 3\n    },\n    {\n      \"NAME\": \"offset2\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 2,\n      \"MIN\": -3,\n      \"MAX\": 3\n    },\n    {\n      \"NAME\": \"offset3\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 1.5,\n      \"MIN\": -5,\n      \"MAX\": 5\n    },\n    {\n      \"NAME\": \"depth\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.99,\n      \"MIN\": 0.5,\n      \"MAX\": 1.75\n    },\n    {\n      \"NAME\": \"color1\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.33,\n      \"MIN\": -0.5,\n      \"MAX\": 0.5\n    },\n    {\n      \"NAME\": \"color2\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": -0.33,\n      \"MIN\": -0.5,\n      \"MAX\": 0.5\n    },\n    {\n      \"NAME\": \"color3\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.33,\n      \"MIN\": 0,\n      \"MAX\": 1\n    },\n    {\n      \"NAME\": \"density\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.99,\n      \"MIN\": 0.025,\n      \"MAX\": 1.25\n    },\n    {\n      \"NAME\": \"multiplier\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 2,\n      \"MIN\": 1,\n      \"MAX\": 120\n    },\n    {\n      \"NAME\": \"rate\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0,\n      \"MIN\": -0.1,\n      \"MAX\": 0.1\n    }\n  ]\n}*/\n\n\n////////////////////////////////////////////////////////////\n// Trigonometric2  by mojovideotech\n//\n// based on :\n// shadertoy.com/\\Mdl3RH  by IQ - www.iquilezles.org\n//\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n////////////////////////////////////////////////////////////\n\n\n\nvec2 iterate( in vec2 p, in vec4 t ) {\n    return p - (1.0-depth)*cos(t.yz + p.x*p.y + cos(mix(t.zw,p.yx,matrix)+1.5*3.1415927*p.yx)+p.yy*length(p.yx) );\n}\n\nvoid main() \n{\n\tvec2 q = gl_FragCoord.xy / RENDERSIZE.xy;\n\tvec2 p = offset1 + offset2*q;\n\tp.x *= RENDERSIZE.x/RENDERSIZE.y;\n    p *= offset3;\t\n    float tt = (rate*TIME-sqrt(TIME/seed1))*seed2;\n    vec4 t = 0.05*tt*vec4( p.y,floor(multiplier), matrix.y, matrix.x ) + vec4(0.6,2.0,3.0,1.0);\n    vec2 z = p;\n\tvec3 s = vec3(0.0);\n\tfor( int i=0; i<96; i++ ) {\n\t\tz = iterate( z, t );\n\t\tfloat d = dot( z-p, z-p ); \n\t\ts.x += 1.0/(0.1+d);\n\t\ts.y += sin(atan( p.x-z.x, p.y-z.y ));\n\t\ts.z += exp(-0.2*d );\n\t}\n    s /= 100.0;\n\tvec3 cola = 0.5 + 0.5*cos( vec3(0.5+color2,0.5,(1.0-(color2+0.5))) + 2.5 + s.z*6.2831 );\n\tcola *= 0.5 + 0.5*s.y;\n    cola *= s.x;\n    cola *= 0.94+density*sin(seed2*length(z));\n\tvec3 nor = normalize( vec3( (s.x), 0.02, (s.x) ) );\n\tvec3 dif = mix( nor*cola, vec3(color3,abs(color1+color2),1.0-color3),color3 );\n\tcola += 0.5*vec3(dif);\n\tcola *= 0.3 + 0.7*pow( seed1*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.2 );\n  \tvec3 colb = cola*(vec3(1.5 - nor));\n\tvec3 col = mix(cola,colb,0.5+color1);\n\t\n\tgl_FragColor = vec4( col, 1.0 );\n}","Inlets":[{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"matrix","Exposed":"matrix","Value":{"Vec2f":[0.5,0.4000000059604645]},"Init":{"Vec2f":[0.5,0.4000000059604645]},"Domain":{"Vec2f":{"Min":[-10.0,-10.0],"Max":[10.0,10.0],"Values":[[],[]]}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"seed1","Exposed":"seed1","Value":{"Float":259.8999938964844},"Init":{"Float":250.0},"Domain":{"Float":{"Min":10.0,"Max":500.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"seed2","Exposed":"seed2","Value":{"Float":24.764999389648438},"Init":{"Float":45.0},"Domain":{"Float":{"Min":1.0,"Max":50.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"offset1","Exposed":"offset1","Value":{"Float":3.0},"Init":{"Float":-1.0},"Domain":{"Float":{"Min":-3.0,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"offset2","Exposed":"offset2","Value":{"Float":3.0},"Init":{"Float":2.0},"Domain":{"Float":{"Min":-3.0,"Max":3.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"offset3","Exposed":"offset3","Value":{"Float":-0.22196483612060547},"Init":{"Float":1.5},"Domain":{"Float":{"Min":-5.0,"Max":5.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"depth","Exposed":"depth","Value":{"Float":0.987500011920929},"Init":{"Float":0.9900000095367432},"Domain":{"Float":{"Min":0.5,"Max":1.75}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"color1","Exposed":"color1","Value":{"Float":0.019999999552965164},"Init":{"Float":0.33000001311302185},"Domain":{"Float":{"Min":-0.5,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"color2","Exposed":"color2","Value":{"Float":0.15000000596046448},"Init":{"Float":-0.33000001311302185},"Domain":{"Float":{"Min":-0.5,"Max":0.5}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"color3","Exposed":"color3","Value":{"Float":0.17499999701976776},"Init":{"Float":0.33000001311302185},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"density","Exposed":"density","Value":{"Float":1.0601249933242798},"Init":{"Float":0.9900000095367432},"Domain":{"Float":{"Min":0.02500000037252903,"Max":1.25}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"multiplier","Exposed":"multiplier","Value":{"Float":67.04499816894531},"Init":{"Float":2.0},"Domain":{"Float":{"Min":1.0,"Max":120.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"rate","Exposed":"rate","Value":{"Float":0.015000000596046448},"Init":{"Float":0.0},"Domain":{"Float":{"Min":-0.10000000149011612,"Max":0.10000000149011612}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":24,"Metadata":{"ScriptingName":"NoiseAnimationElectric","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[-74.41532898470712,211.4440736538245],"Size":[180.09375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"NoiseAnimationElectric by nimitz\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"background\",\n\t\t\t\"TYPE\": \"bool\",\n\t\t\t\"DEFAULT\": false\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"blurAmount\",\n\t\t\t\"TYPE\": \"float\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.1,\n\t\t\t\"MAX\" : 2.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/ldlXRS\n// Noise animation - Electric\n// by nimitz (stormoid.com) (twitter: @stormoid)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n// Contact the author for other licensing options\n\n//The domain is displaced by two fbm calls one for each axis.\n//Turbulent fbm (aka ridged) is used for better effect.\n\n#define tm TIME*0.15\n#define tau 6.2831853\n\nmat2 makem2(in float theta){float c = cos(theta);float s = sin(theta);return mat2(c,-s,s,c);}\n//float noise( in vec2 x ){return texture(iChannel0, x*.01).x;}\n// procedural noise\nfloat hash(const float n)\n{\n\treturn fract(sin(n)*29712.15073);\n}\n\nfloat noise(const vec2 x)\n{\n\tvec2 p=floor(x); vec2 f=fract(x);\n\tf=f*f*(3.0-2.0*f);\n\tfloat n=p.x+p.y;\n\tfloat r1=mix(mix(hash(n+0.0),hash(n+1.0),f.x),mix(hash(n),hash(n+1.0),f.x),f.y);\n    float r2=mix(mix(hash(n),hash(n+1.0),f.x),mix(hash(n),hash(n+1.0),f.x),f.y);\n\treturn mix(r1,r2,f.y);\n}\nfloat fbm(in vec2 p)\n{\t\n\tfloat z=2.;\n\tfloat rz = 0.;\n\tvec2 bp = p;\n\tfor (float i= 1.;i < 6.;i++)\n\t{\n\t\trz+= abs((noise(p)-0.5)*2.)/z;\n\t\tz = z*2.;\n\t\tp = p*2.;\n\t}\n\treturn rz;\n}\n\nfloat dualfbm(in vec2 p)\n{\n    //get two rotated fbm calls and displace the domain\n\tvec2 p2 = p*.7;\n\tvec2 basis = vec2(fbm(p2-tm*1.6),fbm(p2+tm*1.7));\n\tbasis = (basis-.5)*.2;\n\tp += basis;\n\t\n\t//coloring\n\treturn fbm(p*makem2(tm*0.2));\n}\n\nfloat circ(vec2 p) \n{\n\tfloat r = length(p);\n\tr = log(sqrt(r));\n\treturn abs(mod(r*4.,tau)-3.14)*3.+.2;\n\n}\n\n\nvoid main(void)\n{\n\t//setup system\n\tvec2 p = gl_FragCoord.xy / RENDERSIZE.xy-0.5;\n\tp.x *= RENDERSIZE.x/RENDERSIZE.y;\n\tp*=4.;\n\t\n    float rz = background ? dualfbm(p) : 0.1;\n\t\n\t//rings\n\tp /= exp(mod(tm*10.,3.14159));\n\trz *= pow(abs((0.1-circ(p))),.9);\n\t\n\t//final color\n\tvec3 col = vec3(.2,0.1,0.4)/rz;\n\tcol=pow(abs(col),vec3(.99));\n\tgl_FragColor = vec4(col,1.);\n\t    \n  \n}\n","Inlets":[{"uuid":"fb27e4cb-ea7f-41e2-ad92-2354498c1b6b","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"background","Exposed":"background","Value":{"Bool":true},"Init":{"Bool":false},"Domain":{"Bool":null}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"blurAmount","Exposed":"bluramount","Value":{"Float":0.35950323939323425},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":0.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":0.5613894462585449},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.10000000149011612,"Max":2.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Init":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[4.0740742683410645,10.56980037689209]},"Init":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[1.0,0.7565118074417114,0.8650644421577454,1.0]},"Init":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":23,"Metadata":{"ScriptingName":"Circular","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[300.5846710152929,447.9258927805722],"Size":[82.640625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n  \"CREDIT\": \"Circular by r1 (sharpened)\",\n  \"CATEGORIES\": [ \"ci\" ],\n  \"DESCRIPTION\": \"Sharp radial rings from center, with zoom and mouse control\",\n  \"INPUTS\": [\n    {\n      \"NAME\": \"inputImage\",\n      \"TYPE\": \"image\"\n    },\n    {\n      \"NAME\": \"iZoom\",\n      \"TYPE\": \"float\",\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"DEFAULT\": 1.0\n    },\n    {\n      \"NAME\": \"iSteps\",\n      \"TYPE\": \"float\",\n      \"MIN\": 2.0,\n      \"MAX\": 75.0,\n      \"DEFAULT\": 19.0\n    },\n    {\n      \"NAME\": \"iMouse\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [0.0, 0.0],\n      \"MAX\": [640.0, 480.0],\n      \"MIN\": [0.0, 0.0]\n    },\n    {\n      \"NAME\": \"iColor\",\n      \"TYPE\": \"color\",\n      \"DEFAULT\": [0.9, 0.6, 0.0, 1.0]\n    },\n    {\n      \"NAME\": \"iSharpness\",\n      \"TYPE\": \"float\",\n      \"MIN\": 0.001,\n      \"MAX\": 1.0,\n      \"DEFAULT\": 0.02\n    }\n  ]\n}*/\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / RENDERSIZE.xy;\n  vec2 center = iMouse / RENDERSIZE.xy;\n\n  float dist = distance(uv, center) * iZoom;\n\n  // Hard ring pattern using fractional distance\n  float rings = fract(dist * iSteps - TIME * 2.0);  // animates\n  float wave = smoothstep(0.5 - iSharpness, 0.5 + iSharpness, rings);\n\n  vec2 dir = normalize(uv - center);\n  vec2 distortedUV = uv + dir * wave * 0.05 * iZoom;\n\n  vec4 color = IMG_NORM_PIXEL(inputImage, fract(distortedUV));\n\n  // Mix with overlay color based on ring intensity\n  gl_FragColor = mix(color, vec4(iColor.rgb, 1.0), wave);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":0.40188854932785034},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":3.479729652404785},"Init":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[109.98670959472656,217.24786376953125]},"Init":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.7940184473991394,0.7190508842468262,1.0,1.0]},"Init":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"iSharpness","Exposed":"isharpness","Value":{"Float":0.16938666999340057},"Init":{"Float":0.019999999552965164},"Domain":{"Float":{"Min":0.0010000000474974513,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":22,"Metadata":{"ScriptingName":"StarfieldsWillNeverDiePart2","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[178.58467101529288,744.3473821019318],"Size":[210.21875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"Starfields Will Never Die Part 2 by WAHa_06x36\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.0,\n\t\t\t\"MAX\" : 1.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/MlKBWw\n// brightness = pow(2.521, -magnitude)\nvec3 starColour(float bv, float brightness) {\n\tif (bv < -0.4) bv = -0.4;\n\tif (bv > 2.0) bv=2.0;\n\n\tfloat r = 0.0;\n\tif (bv < 0.00) { float t=(bv+0.40)/(0.00+0.40); r=0.61+(0.11*t)+(0.1*t*t); }\n\telse if (bv < 0.40) { float t=(bv-0.00)/(0.40-0.00); r=0.83+0.17*t; }\n\telse { r = 1.00; }\n\n\tfloat g = 0.0;\n\tif (bv < 0.00) { float t=(bv+0.40)/(0.00+0.40); g=0.70+(0.07*t)+(0.1*t*t); }\n\telse if (bv < 0.40) { float t=(bv-0.00)/(0.40-0.00); g=0.87+(0.11*t); }\n\telse if (bv < 1.60) { float t=(bv-0.40)/(1.60-0.40); g=0.98-(0.16*t); }\n\telse { float t=(bv-1.60)/(2.00-1.60); g=0.82-(0.5*t*t); }\n\n\tfloat b = 0.0;\n\tif (bv < 0.40) { b = 1.00; }\n\telse if (bv < 1.50) { float t=(bv-0.40)/(1.50-0.40); b=1.00-(0.47*t)+(0.1*t*t); }\n\telse if (bv < 1.94) { float t=(bv-1.50)/(1.94-1.50); b=0.63-(0.6*t*t); }\n\telse { b = 0.0; }\n\n\tvec3 linear = pow(vec3(r, g, b), vec3(2.2));\n\n\treturn pow(brightness * 3.0 * linear / (linear.x + linear.y + linear.z), vec3(1.0 / 2.2));\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main(void)\n{  \n  vec3 colour = vec3(0.0);\n\tfor(float i = 0.0; i < 5.0; i++) {\n\t\tvec2 p = iZoom * (2.0 * gl_FragCoord.xy - RENDERSIZE.xy) / min(RENDERSIZE.x, RENDERSIZE.y);\n\t\tvec3 v = vec3(p, 1.0 - length(p) * 0.2);\n\t\n\t\tfloat ta = TIME * 0.1;\n\t\tmat3 m=mat3(\n\t\t\t0.0,1.0,0.0,\n\t\t\t-sin(ta),0.0,cos(ta),\n\t\t\tcos(ta),0.0,sin(ta));\n\t\tm*=m*m;\n\t\tm*=m;\n\t\tv=m*v;\n\t\n\t\tfloat a = (atan(v.y, v.x) / 3.141592 / 2.0 + 0.5);\n\t\tfloat slice = floor(a * 1000.0);\n\t\tfloat phase = rand(vec2(slice, 0.0 + i * 10.0));\n\t\tfloat dist = rand(vec2(slice, 1.0 + i * 10.0)) * 3.0;\n\t\tfloat hue = rand(vec2(slice, 2.0 + i * 10.0));\n\t\tfloat bright = pow(rand(vec2(slice, 3.0)), 5.0);\n\t\n\t\tfloat z = dist / length(v.xy) * v.z;\n\t\tfloat Z = mod(z + phase + TIME * 0.6, 1.0);\n\t\tfloat d = sqrt(z * z + dist * dist);\n\t\n\t\tfloat c = exp(-Z * 40.0 + 0.3) / (d * d + 1.0);\n\t\tcolour += starColour(hue * 2.4 - 0.4, c * 2.0 * bright);\n\t}\n\tgl_FragColor = vec4(colour, 1.0);\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":3.910402297973633},"Init":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Init":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[1.0,0.015533684752881527,0.572579562664032,1.0]},"Init":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":21,"Metadata":{"ScriptingName":"BinarySerpents","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[281.5846710152929,224.34738210193177],"Size":[129.09375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n  \"CREDIT\": \"BinarySerpents by Trisomie21\",\n  \"CATEGORIES\": [\"ci\"],\n  \"DESCRIPTION\": \"https://www.shadertoy.com/view/MslGRH\",\n  \"INPUTS\": [\n    {\n      \"NAME\": \"iChannel0\",\n      \"TYPE\": \"image\"\n    },\n    {\n      \"NAME\": \"iZoom\",\n      \"TYPE\": \"float\",\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"DEFAULT\": 1.0\n    },\n    {\n      \"NAME\": \"iMouse\",\n      \"TYPE\": \"point2D\",\n      \"DEFAULT\": [0.0, 0.0],\n      \"MAX\": [640.0, 480.0],\n      \"MIN\": [0.0, 0.0]\n    },\n    {\n      \"NAME\": \"iColor\",\n      \"TYPE\": \"color\",\n      \"DEFAULT\": [0.0, 1.0, 0.0, 1.0]\n    }\n  ]\n}\n*/\n// https://www.shadertoy.com/view/MslGRH\n\n// With tweaks by PauloFalcao\n\nfloat BinarySerpentsTexture3D(vec3 n, float res){\n  n = floor(n*res+.5);\n  return fract(sin((n.x+n.y*1e5+n.z*1e7)*1e-4)*1e5);\n}\n\nfloat BinarySerpentsmap( vec3 p ){\n    p.x+=sin(p.z*4.0+TIME*4.0)*0.1*cos(TIME*0.1);\n    p = mod(p,vec3(1.0, 1.0, 1.0))-0.5;\n    return length(p.xy)-.1;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n   vec2 uv = iZoom * fragCoord.xy/RENDERSIZE.xy * 2.0 - 0.5;\n  \t vec3 camPos = vec3(cos(TIME*0.3), sin(TIME*0.3), 1.5);\n    vec3 camTarget = vec3(0.0, 0.0, 0.0);\n\n    vec3 camDir = normalize(camTarget-camPos);\n    vec3 camUp  = normalize(vec3(0.0, 1.0, 0.0));\n    vec3 camSide = cross(camDir, camUp);\n    float focus = 2.0;\n\n    vec3 rayDir = normalize(camSide*uv.x + camUp*uv.y + camDir*focus);\n    vec3 ray = camPos;\n    float d = 0.0, total_d = 0.0;\n    const int MAX_MARCH = 100;\n    const float MAX_DISTANCE = 5.0;\n    float c = 1.0;\n    for(int i=0; i<MAX_MARCH; ++i) {\n        d = BinarySerpentsmap(ray);\n        total_d += d;\n        ray += rayDir * d;\n        if(abs(d)<0.001) { break; }\n        if(total_d>MAX_DISTANCE) { c = 0.; total_d=MAX_DISTANCE; break; }\n    }\n\t\n    float fog = 3.1;\n    vec3 result = vec3( vec3(iColor.r, iColor.g, iColor.b) * (fog - total_d) / fog );\n\n    ray.z -= 5.+TIME*.5;\n    float r = BinarySerpentsTexture3D(ray, 33.);\n\n  fragColor = vec4(result*(step(r,.3)+r*.2+.1),1.0);\n}\n\n\nvoid main(void) { mainImage(gl_FragColor, gl_FragCoord.xy); }","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Init":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.0,1.0,0.0,1.0]},"Init":{"Vec4f":[0.0,1.0,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":20,"Metadata":{"ScriptingName":"ColorWave","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[415.49376192438376,-101.16924646585528],"Size":[100.125,22.0],"Loops":false,"Vertex":"","Fragment":"/*\n{\n    \"CATEGORIES\": [\n        \"Automatically Converted\",\n        \"GLSLSandbox\"\n    ],\n    \"DESCRIPTION\": \"Automatically converted from http://glslsandbox.com/e#71410.0\",\n    \"INPUTS\": [\n        {\n            \"MAX\": [\n                1,\n                1\n            ],\n            \"MIN\": [\n                0,\n                0\n            ],\n            \"NAME\": \"mouse\",\n            \"TYPE\": \"point2D\"\n        }\n    ]\n}\n\n*/\n\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n\nvoid main()\n{\n    vec2 p=(2.0*gl_FragCoord.xy-RENDERSIZE)/max(RENDERSIZE.x,RENDERSIZE.y);\n    \n    for(float i=1.;i<20.;i++)\n    {\n        p.x += .5/i*sin(i*p.y+TIME)+1.;\n        p.y += .5/i*cos(i*p.x+TIME)+2.;\n    } \n\t\n    p.y += cos(TIME/4.+mouse.y)*5.;\n    p.x += sin(TIME/3.+mouse.x)*4.;\n    \n    // vec3 col=vec3(abs(sin(3.0*p.x))*1.3,  abs(sin(1.5*p.y))+0.3, abs(sin(1.0*p.x+p.y))+0.3);\n    vec3 col=vec3(abs(sin(3.0*p.x))*1.3,  abs(sin(1.5*p.y))+0.0, abs(sin(1.0*p.x+p.y))+0.3);\n    float dist = sqrt(col.x*col.x + col.y * col.y + col.z*col.z);\n    gl_FragColor=vec4(col/dist, 1.0);\n}","Inlets":[{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"mouse","Exposed":"mouse","Value":{"Vec2f":[0.5,0.5]},"Init":{"Vec2f":[0.5,0.5]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":19,"Metadata":{"ScriptingName":"stripes","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[1120.0919061553031,-31.842752187499855],"Size":[76.015625,22.0],"Loops":false,"Vertex":"\nvoid main() {\n  isf_vertShaderInit();\n}\n","Fragment":"/*{\n  \"CATEGORIES\": [\"Video\"],\n  \"INPUTS\": [\n    { \"NAME\": \"inputImage\", \"TYPE\": \"image\" },\n    { \"NAME\": \"start0\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.02, 0.0] },\n    { \"NAME\": \"end0\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.02, 1.0] },\n    { \"NAME\": \"start1\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.07, 0.0] },\n    { \"NAME\": \"end1\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.07, 1.0] },\n    { \"NAME\": \"start2\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.11, 0.0] },\n    { \"NAME\": \"end2\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.11, 1.0] },\n    { \"NAME\": \"start3\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.16, 0.0] },\n    { \"NAME\": \"end3\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.16, 1.0] },\n    { \"NAME\": \"start4\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.20, 0.0] },\n    { \"NAME\": \"end4\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.20, 1.0] },\n    { \"NAME\": \"start5\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.25, 0.0] },\n    { \"NAME\": \"end5\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.25, 1.0] },\n    { \"NAME\": \"start6\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.29, 0.0] },\n    { \"NAME\": \"end6\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.29, 1.0] },\n    { \"NAME\": \"start7\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.34, 0.0] },\n    { \"NAME\": \"end7\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.34, 1.0] },\n    { \"NAME\": \"start8\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.38, 0.0] },\n    { \"NAME\": \"end8\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.38, 1.0] },\n    { \"NAME\": \"start9\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.43, 0.0] },\n    { \"NAME\": \"end9\",   \"TYPE\": \"point2D\", \"DEFAULT\": [0.43, 1.0] },\n    { \"NAME\": \"start10\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.47, 0.0] },\n    { \"NAME\": \"end10\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.47, 1.0] },\n    { \"NAME\": \"start11\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.52, 0.0] },\n    { \"NAME\": \"end11\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.52, 1.0] },\n    { \"NAME\": \"start12\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.56, 0.0] },\n    { \"NAME\": \"end12\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.56, 1.0] },\n    { \"NAME\": \"start13\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.61, 0.0] },\n    { \"NAME\": \"end13\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.61, 1.0] },\n    { \"NAME\": \"start14\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.65, 0.0] },\n    { \"NAME\": \"end14\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.65, 1.0] },\n    { \"NAME\": \"start15\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.70, 0.0] },\n    { \"NAME\": \"end15\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.70, 1.0] },\n    { \"NAME\": \"start16\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.74, 0.0] },\n    { \"NAME\": \"end16\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.74, 1.0] },\n    { \"NAME\": \"start17\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.79, 0.0] },\n    { \"NAME\": \"end17\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.79, 1.0] },\n    { \"NAME\": \"start18\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.83, 0.0] },\n    { \"NAME\": \"end18\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.83, 1.0] },\n    { \"NAME\": \"start19\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.88, 0.0] },\n    { \"NAME\": \"end19\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.88, 1.0] },\n    { \"NAME\": \"start20\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.92, 0.0] },\n    { \"NAME\": \"end20\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.92, 1.0] },\n    { \"NAME\": \"start21\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.97, 0.0] },\n    { \"NAME\": \"end21\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.97, 1.0] },\n    { \"NAME\": \"start22\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.99, 0.0] },\n    { \"NAME\": \"end22\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.99, 1.0] },\n    { \"NAME\": \"start23\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.02, 0.0] },\n    { \"NAME\": \"end23\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.02, 1.0] },\n    { \"NAME\": \"start24\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.07, 0.0] },\n    { \"NAME\": \"end24\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.07, 1.0] },\n    { \"NAME\": \"start25\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.11, 0.0] },\n    { \"NAME\": \"end25\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.11, 1.0] },\n    { \"NAME\": \"start26\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.16, 0.0] },\n    { \"NAME\": \"end26\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.16, 1.0] },\n    { \"NAME\": \"start27\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.20, 0.0] },\n    { \"NAME\": \"end27\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.20, 1.0] },\n    { \"NAME\": \"start28\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.25, 0.0] },\n    { \"NAME\": \"end28\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.25, 1.0] },\n    { \"NAME\": \"start29\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.29, 0.0] },\n    { \"NAME\": \"end29\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.29, 1.0] },\n    { \"NAME\": \"start30\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.34, 0.0] },\n    { \"NAME\": \"end30\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.34, 1.0] },\n    { \"NAME\": \"start31\", \"TYPE\": \"point2D\", \"DEFAULT\": [0.34, 0.0] },\n    { \"NAME\": \"end31\",  \"TYPE\": \"point2D\", \"DEFAULT\": [0.34, 1.0] } \n  ]\n}*/\n\nvoid main() {\n  vec2 uv = isf_FragNormCoord;\n  float bandWidth = 10.0 / float(RENDERSIZE.x);\n  float bandHeight = 0.5;\n  float bandTop = 0.5 - bandHeight / 2.0;\n  float bandBottom = 0.5 + bandHeight / 2.0;\n  float spacing = 1.0 / 31.0;\n  float halfBand = bandWidth / 2.0;\n\n  vec4 result = vec4(0.0);\n\n  for (int i = 0; i < 31; i++) {\n    float cx = (float(i) + 0.5) * spacing;\n\n    if (uv.x >= cx - halfBand && uv.x <= cx + halfBand && uv.y >= bandTop && uv.y <= bandBottom) {\n      float t = (uv.y - bandTop) / (bandBottom - bandTop);\n\n      vec2 start, end;\n\n      if (i == 0) { start = start0; end = end0; }\n      else if (i == 1) { start = start1; end = end1; }\n      else if (i == 2) { start = start2; end = end2; }\n      else if (i == 3) { start = start3; end = end3; }\n      else if (i == 4) { start = start4; end = end4; }\n      else if (i == 5) { start = start5; end = end5; }\n      else if (i == 6) { start = start6; end = end6; }\n      else if (i == 7) { start = start7; end = end7; }\n      else if (i == 8) { start = start8; end = end8; }\n      else if (i == 9) { start = start9; end = end9; }\n      else if (i == 10) { start = start10; end = end10; }\n      else if (i == 11) { start = start11; end = end11; }\n      else if (i == 12) { start = start12; end = end12; }\n      else if (i == 13) { start = start13; end = end13; }\n      else if (i == 14) { start = start14; end = end14; }\n      else if (i == 15) { start = start15; end = end15; }\n      else if (i == 16) { start = start16; end = end16; }\n      else if (i == 17) { start = start17; end = end17; }\n      else if (i == 18) { start = start18; end = end18; }\n      else if (i == 19) { start = start19; end = end19; }\n      else if (i == 20) { start = start20; end = end20; }\n      else if (i == 21) { start = start21; end = end21; }\n      else if (i == 22) { start = start22; end = end22; }\n      else if (i == 23) { start = start23; end = end23; }\n      else if (i == 24) { start = start24; end = end24; }\n      else if (i == 25) { start = start25; end = end25; }\n      else if (i == 26) { start = start26; end = end26; }\n      else if (i == 27) { start = start27; end = end27; }\n      else if (i == 28) { start = start28; end = end28; }\n      else if (i == 29) { start = start29; end = end29; }\n      else if (i == 30) { start = start30; end = end30; }      \n\n      vec2 sampleUV = mix(start, end, t);\n      result = IMG_NORM_PIXEL(inputImage, sampleUV);\n      break;\n    }\n  }\n\n  gl_FragColor = result;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"start0","Exposed":"start0","Address":"lightwarrior:/start0","Value":{"Vec2f":[0.019999999552965164,0.0]},"Init":{"Vec2f":[0.019999999552965164,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"end0","Exposed":"end0","Address":"lightwarrior:/end0","Value":{"Vec2f":[0.019999999552965164,1.0]},"Init":{"Vec2f":[0.019999999552965164,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"start1","Exposed":"start1","Address":"lightwarrior:/start1","Value":{"Vec2f":[0.07000000029802322,0.0]},"Init":{"Vec2f":[0.07000000029802322,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"end1","Exposed":"end1","Address":"lightwarrior:/end1","Value":{"Vec2f":[0.07000000029802322,1.0]},"Init":{"Vec2f":[0.07000000029802322,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"start2","Exposed":"start2","Address":"lightwarrior:/start2","Value":{"Vec2f":[0.10999999940395355,0.0]},"Init":{"Vec2f":[0.10999999940395355,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"end2","Exposed":"end2","Address":"lightwarrior:/end2","Value":{"Vec2f":[0.10999999940395355,1.0]},"Init":{"Vec2f":[0.10999999940395355,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"start3","Exposed":"start3","Address":"lightwarrior:/start3","Value":{"Vec2f":[0.1599999964237213,0.0]},"Init":{"Vec2f":[0.1599999964237213,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"end3","Exposed":"end3","Address":"lightwarrior:/end3","Value":{"Vec2f":[0.1599999964237213,1.0]},"Init":{"Vec2f":[0.1599999964237213,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"start4","Exposed":"start4","Address":"lightwarrior:/start4","Value":{"Vec2f":[0.20000000298023224,0.0]},"Init":{"Vec2f":[0.20000000298023224,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"end4","Exposed":"end4","Address":"lightwarrior:/end4","Value":{"Vec2f":[0.20000000298023224,1.0]},"Init":{"Vec2f":[0.20000000298023224,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"start5","Exposed":"start5","Address":"lightwarrior:/start5","Value":{"Vec2f":[0.25,0.0]},"Init":{"Vec2f":[0.25,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"end5","Exposed":"end5","Address":"lightwarrior:/end5","Value":{"Vec2f":[0.25,1.0]},"Init":{"Vec2f":[0.25,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"start6","Exposed":"start6","Address":"lightwarrior:/start6","Value":{"Vec2f":[0.28999999165534973,0.0]},"Init":{"Vec2f":[0.28999999165534973,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"end6","Exposed":"end6","Address":"lightwarrior:/end6","Value":{"Vec2f":[0.28999999165534973,1.0]},"Init":{"Vec2f":[0.28999999165534973,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"start7","Exposed":"start7","Address":"lightwarrior:/start7","Value":{"Vec2f":[0.3400000035762787,0.0]},"Init":{"Vec2f":[0.3400000035762787,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"end7","Exposed":"end7","Address":"lightwarrior:/end7","Value":{"Vec2f":[0.3400000035762787,1.0]},"Init":{"Vec2f":[0.3400000035762787,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"start8","Exposed":"start8","Address":"lightwarrior:/start8","Value":{"Vec2f":[0.3799999952316284,0.0]},"Init":{"Vec2f":[0.3799999952316284,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"end8","Exposed":"end8","Address":"lightwarrior:/end8","Value":{"Vec2f":[0.3799999952316284,1.0]},"Init":{"Vec2f":[0.3799999952316284,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"start9","Exposed":"start9","Address":"lightwarrior:/start9","Value":{"Vec2f":[0.4300000071525574,0.0]},"Init":{"Vec2f":[0.4300000071525574,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"end9","Exposed":"end9","Address":"lightwarrior:/end9","Value":{"Vec2f":[0.4300000071525574,1.0]},"Init":{"Vec2f":[0.4300000071525574,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"start10","Exposed":"start10","Address":"lightwarrior:/start10","Value":{"Vec2f":[0.4699999988079071,0.0]},"Init":{"Vec2f":[0.4699999988079071,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"end10","Exposed":"end10","Address":"lightwarrior:/end10","Value":{"Vec2f":[0.4699999988079071,1.0]},"Init":{"Vec2f":[0.4699999988079071,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":23,"Hidden":true,"Custom":"start11","Exposed":"start11","Address":"lightwarrior:/start11","Value":{"Vec2f":[0.5199999809265137,0.0]},"Init":{"Vec2f":[0.5199999809265137,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":24,"Hidden":true,"Custom":"end11","Exposed":"end11","Address":"lightwarrior:/end11","Value":{"Vec2f":[0.5199999809265137,1.0]},"Init":{"Vec2f":[0.5199999809265137,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":25,"Hidden":true,"Custom":"start12","Exposed":"start12","Address":"lightwarrior:/start12","Value":{"Vec2f":[0.5600000023841858,0.0]},"Init":{"Vec2f":[0.5600000023841858,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":26,"Hidden":true,"Custom":"end12","Exposed":"end12","Address":"lightwarrior:/end12","Value":{"Vec2f":[0.5600000023841858,1.0]},"Init":{"Vec2f":[0.5600000023841858,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":27,"Hidden":true,"Custom":"start13","Exposed":"start13","Address":"lightwarrior:/start13","Value":{"Vec2f":[0.6100000143051147,0.0]},"Init":{"Vec2f":[0.6100000143051147,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":28,"Hidden":true,"Custom":"end13","Exposed":"end13","Address":"lightwarrior:/end13","Value":{"Vec2f":[0.6100000143051147,1.0]},"Init":{"Vec2f":[0.6100000143051147,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":29,"Hidden":true,"Custom":"start14","Exposed":"start14","Address":"lightwarrior:/start14","Value":{"Vec2f":[0.6499999761581421,0.0]},"Init":{"Vec2f":[0.6499999761581421,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":30,"Hidden":true,"Custom":"end14","Exposed":"end14","Address":"lightwarrior:/end14","Value":{"Vec2f":[0.6499999761581421,1.0]},"Init":{"Vec2f":[0.6499999761581421,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":31,"Hidden":true,"Custom":"start15","Exposed":"start15","Address":"lightwarrior:/start15","Value":{"Vec2f":[0.699999988079071,0.0]},"Init":{"Vec2f":[0.699999988079071,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":32,"Hidden":true,"Custom":"end15","Exposed":"end15","Address":"lightwarrior:/end15","Value":{"Vec2f":[0.699999988079071,1.0]},"Init":{"Vec2f":[0.699999988079071,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":33,"Hidden":true,"Custom":"start16","Exposed":"start16","Address":"lightwarrior:/start16","Value":{"Vec2f":[0.7400000095367432,0.0]},"Init":{"Vec2f":[0.7400000095367432,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":34,"Hidden":true,"Custom":"end16","Exposed":"end16","Address":"lightwarrior:/end16","Value":{"Vec2f":[0.7400000095367432,1.0]},"Init":{"Vec2f":[0.7400000095367432,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":35,"Hidden":true,"Custom":"start17","Exposed":"start17","Address":"lightwarrior:/start17","Value":{"Vec2f":[0.6924999952316284,0.0]},"Init":{"Vec2f":[0.7900000214576721,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":36,"Hidden":true,"Custom":"end17","Exposed":"end17","Address":"lightwarrior:/end17","Value":{"Vec2f":[0.7900000214576721,1.0]},"Init":{"Vec2f":[0.7900000214576721,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":37,"Hidden":true,"Custom":"start18","Exposed":"start18","Address":"lightwarrior:/start18","Value":{"Vec2f":[0.8299999833106995,0.0]},"Init":{"Vec2f":[0.8299999833106995,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":38,"Hidden":true,"Custom":"end18","Exposed":"end18","Address":"lightwarrior:/end18","Value":{"Vec2f":[0.8299999833106995,1.0]},"Init":{"Vec2f":[0.8299999833106995,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":39,"Hidden":true,"Custom":"start19","Exposed":"start19","Address":"lightwarrior:/start19","Value":{"Vec2f":[0.8799999952316284,0.0]},"Init":{"Vec2f":[0.8799999952316284,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":40,"Hidden":true,"Custom":"end19","Exposed":"end19","Address":"lightwarrior:/end19","Value":{"Vec2f":[0.8799999952316284,1.0]},"Init":{"Vec2f":[0.8799999952316284,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":41,"Hidden":true,"Custom":"start20","Exposed":"start20","Address":"lightwarrior:/start20","Value":{"Vec2f":[0.9200000166893005,0.0]},"Init":{"Vec2f":[0.9200000166893005,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":42,"Hidden":true,"Custom":"end20","Exposed":"end20","Address":"lightwarrior:/end20","Value":{"Vec2f":[0.9200000166893005,1.0]},"Init":{"Vec2f":[0.9200000166893005,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":43,"Hidden":true,"Custom":"start21","Exposed":"start21","Address":"lightwarrior:/start21","Value":{"Vec2f":[0.9700000286102295,0.0]},"Init":{"Vec2f":[0.9700000286102295,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":44,"Hidden":true,"Custom":"end21","Exposed":"end21","Address":"lightwarrior:/end21","Value":{"Vec2f":[0.9700000286102295,1.0]},"Init":{"Vec2f":[0.9700000286102295,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":45,"Hidden":true,"Custom":"start22","Exposed":"start22","Address":"lightwarrior:/start22","Value":{"Vec2f":[0.9900000095367432,0.0]},"Init":{"Vec2f":[0.9900000095367432,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":46,"Hidden":true,"Custom":"end22","Exposed":"end22","Address":"lightwarrior:/end22","Value":{"Vec2f":[0.9900000095367432,1.0]},"Init":{"Vec2f":[0.9900000095367432,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":47,"Hidden":true,"Custom":"start23","Exposed":"start23","Address":"lightwarrior:/start23","Value":{"Vec2f":[0.019999999552965164,0.0]},"Init":{"Vec2f":[0.019999999552965164,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":48,"Hidden":true,"Custom":"end23","Exposed":"end23","Address":"lightwarrior:/end23","Value":{"Vec2f":[0.019999999552965164,1.0]},"Init":{"Vec2f":[0.019999999552965164,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":49,"Hidden":true,"Custom":"start24","Exposed":"start24","Address":"lightwarrior:/start24","Value":{"Vec2f":[0.07000000029802322,0.0]},"Init":{"Vec2f":[0.07000000029802322,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":50,"Hidden":true,"Custom":"end24","Exposed":"end24","Address":"lightwarrior:/end24","Value":{"Vec2f":[0.07000000029802322,1.0]},"Init":{"Vec2f":[0.07000000029802322,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":51,"Hidden":true,"Custom":"start25","Exposed":"start25","Address":"lightwarrior:/start25","Value":{"Vec2f":[0.10999999940395355,0.0]},"Init":{"Vec2f":[0.10999999940395355,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":52,"Hidden":true,"Custom":"end25","Exposed":"end25","Address":"lightwarrior:/end25","Value":{"Vec2f":[0.10999999940395355,1.0]},"Init":{"Vec2f":[0.10999999940395355,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":53,"Hidden":true,"Custom":"start26","Exposed":"start26","Address":"lightwarrior:/start26","Value":{"Vec2f":[0.1599999964237213,0.0]},"Init":{"Vec2f":[0.1599999964237213,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":54,"Hidden":true,"Custom":"end26","Exposed":"end26","Address":"lightwarrior:/end26","Value":{"Vec2f":[0.1599999964237213,1.0]},"Init":{"Vec2f":[0.1599999964237213,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":55,"Hidden":true,"Custom":"start27","Exposed":"start27","Address":"lightwarrior:/start27","Value":{"Vec2f":[0.20000000298023224,0.0]},"Init":{"Vec2f":[0.20000000298023224,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":56,"Hidden":true,"Custom":"end27","Exposed":"end27","Address":"lightwarrior:/end27","Value":{"Vec2f":[0.20000000298023224,1.0]},"Init":{"Vec2f":[0.20000000298023224,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":57,"Hidden":true,"Custom":"start28","Exposed":"start28","Address":"lightwarrior:/start28","Value":{"Vec2f":[0.25,0.0]},"Init":{"Vec2f":[0.25,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":58,"Hidden":true,"Custom":"end28","Exposed":"end28","Address":"lightwarrior:/end28","Value":{"Vec2f":[0.25,1.0]},"Init":{"Vec2f":[0.25,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":59,"Hidden":true,"Custom":"start29","Exposed":"start29","Address":"lightwarrior:/start29","Value":{"Vec2f":[0.28999999165534973,1.0]},"Init":{"Vec2f":[0.28999999165534973,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":60,"Hidden":true,"Custom":"end29","Exposed":"end29","Address":"lightwarrior:/end29","Value":{"Vec2f":[0.4087500274181366,1.0]},"Init":{"Vec2f":[0.28999999165534973,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":61,"Hidden":true,"Custom":"start30","Exposed":"start30","Address":"lightwarrior:/start30","Value":{"Vec2f":[1.0,1.0]},"Init":{"Vec2f":[0.3400000035762787,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":62,"Hidden":true,"Custom":"end30","Exposed":"end30","Address":"lightwarrior:/end30","Value":{"Vec2f":[0.0,0.6712499856948853]},"Init":{"Vec2f":[0.3400000035762787,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":63,"Hidden":true,"Custom":"start31","Exposed":"start31","Value":{"Vec2f":[0.3400000035762787,0.0]},"Init":{"Vec2f":[0.3400000035762787,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":64,"Hidden":true,"Custom":"end31","Exposed":"end31","Value":{"Vec2f":[0.3400000035762787,1.0]},"Init":{"Vec2f":[0.3400000035762787,1.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1.0,1.0],"Values":[[],[]]}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":18,"Metadata":{"ScriptingName":"Video Mixer.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[1637.883826582938,-45.74955973436698],"Size":[117.671875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Value":{"Float":1.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false,"Address":"Shmdata Output:/"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":16,"Metadata":{"ScriptingName":"Solid Color.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[1110.883826582938,555.250440265633],"Size":[110.65625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"Color\",\n        \"Utility\"\n    ],\n    \"CREDIT\": \"by Carter Rosenberg\",\n    \"DESCRIPTION\": \"demonstrates the use of color-type image inputs\",\n    \"INPUTS\": [\n        {\n            \"DEFAULT\": [\n                1,\n                0,\n                0,\n                1\n            ],\n            \"NAME\": \"Color\",\n            \"TYPE\": \"color\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\nvoid main()\n{\n\tgl_FragColor = Color;\n}\n","Inlets":[{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Color","Exposed":"color","Value":{"Vec4f":[0.4627451002597809,1.0,0.8444647789001465,1.0]},"Init":{"Vec4f":[1.0,0.0,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":1,"Metadata":{"ScriptingName":"Video Mixer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[557.0,37.0],"Size":[108.890625,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n    \"CATEGORIES\": [\n        \"General\"\n    ],\n    \"CREDIT\": \"Jamie Owen, Jean-Michaël Celerier\",\n    \"DESCRIPTION\": \"8-channel video mixer\",\n    \"INPUTS\": [\n        { \"NAME\": \"t1\", \"LABEL\" : \"Texture 1\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t2\", \"LABEL\" : \"Texture 2\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t3\", \"LABEL\" : \"Texture 3\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t4\", \"LABEL\" : \"Texture 4\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t5\", \"LABEL\" : \"Texture 5\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t6\", \"LABEL\" : \"Texture 6\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t7\", \"LABEL\" : \"Texture 7\", \"TYPE\": \"image\" },\n        { \"NAME\": \"t8\", \"LABEL\" : \"Texture 8\", \"TYPE\": \"image\" },\n        { \"NAME\": \"alpha1\", \"LABEL\" : \"Alpha 1\", \"DEFAULT\": 1, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha2\", \"LABEL\" : \"Alpha 2\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha3\", \"LABEL\" : \"Alpha 3\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha4\", \"LABEL\" : \"Alpha 4\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha5\", \"LABEL\" : \"Alpha 5\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha6\", \"LABEL\" : \"Alpha 6\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha7\", \"LABEL\" : \"Alpha 7\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"NAME\": \"alpha8\", \"LABEL\" : \"Alpha 8\", \"DEFAULT\": 0, \"MAX\": 1, \"MIN\": 0, \"TYPE\": \"float\" },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 1\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode1\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 2\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode2\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 3\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode3\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 4\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode4\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 5\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode5\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 6\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode6\"\n        },\n        { \"VALUES\" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],\n           \"LABELS\" : [ \"Add\", \"Average\", \"Color Burn\", \"Color Dodge\", \"Darken\", \"Difference\", \n                        \"Exclusion\", \"Glow\", \"Hard Light\", \"Hard Mix\", \"Lighten\", \"Linear Burn\", \n                        \"Linear Dodge\", \"Linear Light\", \"Multiply\", \"Negation\", \"Normal\", \"Overlay\", \n                        \"Phoenix\", \"Pin Light\", \"Reflect\", \"Screen\", \"Soft Light\", \"Subtract\", \"Vivid Light\"],\n           \"IDENTITY\" : 1,\n           \"DEFAULT\" : 1,\n           \"LABEL\" : \"Mode 7\",\n           \"TYPE\" : \"long\",\n           \"NAME\" : \"mode7\"\n        }\n    ],\n    \"ISFVSN\": \"2\"\n}\n*/\n\n/* Blend mode implementations courtesy of Jamie Owen:\n\n   https://github.com/jamieowen/glsl-blend\n\nThe MIT License (MIT) Copyright (c) 2015 Jamie Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nvec3 blendPhoenix(vec3 base, vec3 blend) {\n  return min(base, blend) - max(base, blend) + vec3(1.0);\n}\n\nvec3 blendPhoenix(vec3 base, vec3 blend, float opacity) {\n  return (blendPhoenix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendOverlay(float base, float blend) {\n  return base < 0.5 ? (2.0 * base * blend)\n                    : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n  return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g),\n              blendOverlay(base.b, blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n  return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNormal(vec3 base, vec3 blend) { return blend; }\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n  return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendNegation(vec3 base, vec3 blend) {\n  return vec3(1.0) - abs(vec3(1.0) - base - blend);\n}\n\nvec3 blendNegation(vec3 base, vec3 blend, float opacity) {\n  return (blendNegation(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend) { return base * blend; }\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n  return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base * base / (1.0 - blend), 1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n  return vec3(blendReflect(base.r, blend.r), blendReflect(base.g, blend.g),\n              blendReflect(base.b, blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n  return (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendAverage(vec3 base, vec3 blend) { return (base + blend) / 2.0; }\n\nvec3 blendAverage(vec3 base, vec3 blend, float opacity) {\n  return (blendAverage(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearBurn(float base, float blend) {\n  // Note : Same implementation as BlendSubtractf\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendSubtract\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLighten(float base, float blend) { return max(blend, base); }\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n  return vec3(blendLighten(base.r, blend.r), blendLighten(base.g, blend.g),\n              blendLighten(base.b, blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n  return (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendScreen(float base, float blend) {\n  return 1.0 - ((1.0 - base) * (1.0 - blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n  return vec3(blendScreen(base.r, blend.r), blendScreen(base.g, blend.g),\n              blendScreen(base.b, blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n  return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSoftLight(float base, float blend) {\n  return (blend < 0.5)\n             ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend))\n             : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n  return vec3(blendSoftLight(base.r, blend.r), blendSoftLight(base.g, blend.g),\n              blendSoftLight(base.b, blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n  return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendSubtract(float base, float blend) {\n  return max(base + blend - 1.0, 0.0);\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend) {\n  return max(base + blend - vec3(1.0), vec3(0.0));\n}\n\nvec3 blendSubtract(vec3 base, vec3 blend, float opacity) {\n  return (blendSubtract(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend) {\n  return base + blend - 2.0 * base * blend;\n}\n\nvec3 blendExclusion(vec3 base, vec3 blend, float opacity) {\n  return (blendExclusion(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendDifference(vec3 base, vec3 blend) { return abs(base - blend); }\n\nvec3 blendDifference(vec3 base, vec3 blend, float opacity) {\n  return (blendDifference(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendDarken(float base, float blend) { return min(blend, base); }\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n  return vec3(blendDarken(base.r, blend.r), blendDarken(base.g, blend.g),\n              blendDarken(base.b, blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n  return (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorDodge(float base, float blend) {\n  return (blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n  return vec3(blendColorDodge(base.r, blend.r),\n              blendColorDodge(base.g, blend.g),\n              blendColorDodge(base.b, blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendColorBurn(float base, float blend) {\n  return (blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n  return vec3(blendColorBurn(base.r, blend.r), blendColorBurn(base.g, blend.g),\n              blendColorBurn(base.b, blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n  return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendAdd(float base, float blend) { return min(base + blend, 1.0); }\n\nvec3 blendAdd(vec3 base, vec3 blend) { return min(base + blend, vec3(1.0)); }\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n  return (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearDodge(float base, float blend) {\n  // Note : Same implementation as BlendAddf\n  return min(base + blend, 1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n  // Note : Same implementation as BlendAdd\n  return min(base + blend, vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend) { return blendOverlay(blend, base); }\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n  return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendGlow(vec3 base, vec3 blend) { return blendReflect(blend, base); }\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n  return (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendVividLight(float base, float blend) {\n  return (blend < 0.5) ? blendColorBurn(base, (2.0 * blend))\n                       : blendColorDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n  return vec3(blendVividLight(base.r, blend.r),\n              blendVividLight(base.g, blend.g),\n              blendVividLight(base.b, blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n  return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendHardMix(float base, float blend) {\n  return (blendVividLight(base, blend) < 0.5) ? 0.0 : 1.0;\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend) {\n  return vec3(blendHardMix(base.r, blend.r), blendHardMix(base.g, blend.g),\n              blendHardMix(base.b, blend.b));\n}\n\nvec3 blendHardMix(vec3 base, vec3 blend, float opacity) {\n  return (blendHardMix(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendLinearLight(float base, float blend) {\n  return blend < 0.5 ? blendLinearBurn(base, (2.0 * blend))\n                     : blendLinearDodge(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n  return vec3(blendLinearLight(base.r, blend.r),\n              blendLinearLight(base.g, blend.g),\n              blendLinearLight(base.b, blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n  return (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendPinLight(float base, float blend) {\n  return (blend < 0.5) ? blendDarken(base, (2.0 * blend))\n                       : blendLighten(base, (2.0 * (blend - 0.5)));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend) {\n  return vec3(blendPinLight(base.r, blend.r), blendPinLight(base.g, blend.g),\n              blendPinLight(base.b, blend.b));\n}\n\nvec3 blendPinLight(vec3 base, vec3 blend, float opacity) {\n  return (blendPinLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend) {\n  if (mode == 1) {\n    return blendAdd(base, blend);\n  } else if (mode == 2) {\n    return blendAverage(base, blend);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend);\n  } else if (mode == 5) {\n    return blendDarken(base, blend);\n  } else if (mode == 6) {\n    return blendDifference(base, blend);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend);\n  } else if (mode == 8) {\n    return blendGlow(base, blend);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend);\n  } else if (mode == 11) {\n    return blendLighten(base, blend);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend);\n  } else if (mode == 16) {\n    return blendNegation(base, blend);\n  } else if (mode == 17) {\n    return blendNormal(base, blend);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend);\n  } else if (mode == 21) {\n    return blendReflect(base, blend);\n  } else if (mode == 22) {\n    return blendScreen(base, blend);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend);\n  }\n}\n\nvec3 blendMode(int mode, vec3 base, vec3 blend, float opacity) {\n  if (mode == 1) {\n    return blendAdd(base, blend, opacity);\n  } else if (mode == 2) {\n    return blendAverage(base, blend, opacity);\n  } else if (mode == 3) {\n    return blendColorBurn(base, blend, opacity);\n  } else if (mode == 4) {\n    return blendColorDodge(base, blend, opacity);\n  } else if (mode == 5) {\n    return blendDarken(base, blend, opacity);\n  } else if (mode == 6) {\n    return blendDifference(base, blend, opacity);\n  } else if (mode == 7) {\n    return blendExclusion(base, blend, opacity);\n  } else if (mode == 8) {\n    return blendGlow(base, blend, opacity);\n  } else if (mode == 9) {\n    return blendHardLight(base, blend, opacity);\n  } else if (mode == 10) {\n    return blendHardMix(base, blend, opacity);\n  } else if (mode == 11) {\n    return blendLighten(base, blend, opacity);\n  } else if (mode == 12) {\n    return blendLinearBurn(base, blend, opacity);\n  } else if (mode == 13) {\n    return blendLinearDodge(base, blend, opacity);\n  } else if (mode == 14) {\n    return blendLinearLight(base, blend, opacity);\n  } else if (mode == 15) {\n    return blendMultiply(base, blend, opacity);\n  } else if (mode == 16) {\n    return blendNegation(base, blend, opacity);\n  } else if (mode == 17) {\n    return blendNormal(base, blend, opacity);\n  } else if (mode == 18) {\n    return blendOverlay(base, blend, opacity);\n  } else if (mode == 19) {\n    return blendPhoenix(base, blend, opacity);\n  } else if (mode == 20) {\n    return blendPinLight(base, blend, opacity);\n  } else if (mode == 21) {\n    return blendReflect(base, blend, opacity);\n  } else if (mode == 22) {\n    return blendScreen(base, blend, opacity);\n  } else if (mode == 23) {\n    return blendSoftLight(base, blend, opacity);\n  } else if (mode == 24) {\n    return blendSubtract(base, blend, opacity);\n  } else if (mode == 25) {\n    return blendVividLight(base, blend, opacity);\n  }\n}\n\nvoid main()\t{\n  gl_FragColor.rgb = \n    blendMode(mode1, alpha1 * IMG_THIS_NORM_PIXEL(t1).rgb * IMG_THIS_NORM_PIXEL(t1).a,\n    blendMode(mode2, alpha2 * IMG_THIS_NORM_PIXEL(t2).rgb * IMG_THIS_NORM_PIXEL(t2).a,\n    blendMode(mode3, alpha3 * IMG_THIS_NORM_PIXEL(t3).rgb * IMG_THIS_NORM_PIXEL(t3).a,\n    blendMode(mode4, alpha4 * IMG_THIS_NORM_PIXEL(t4).rgb * IMG_THIS_NORM_PIXEL(t4).a,\n    blendMode(mode5, alpha5 * IMG_THIS_NORM_PIXEL(t5).rgb * IMG_THIS_NORM_PIXEL(t5).a,\n    blendMode(mode6, alpha6 * IMG_THIS_NORM_PIXEL(t6).rgb * IMG_THIS_NORM_PIXEL(t6).a,\n    blendMode(mode7, alpha7 * IMG_THIS_NORM_PIXEL(t7).rgb * IMG_THIS_NORM_PIXEL(t7).a,\n                     alpha8 * IMG_THIS_NORM_PIXEL(t8).rgb * IMG_THIS_NORM_PIXEL(t8).a)))))));\n\n  gl_FragColor.a = 1.0; \n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":1,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":2,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":3,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":4,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":5,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":6,"Hidden":false},{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":7,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"alpha1","Exposed":"alpha1","Value":{"Float":0.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":9,"Hidden":true,"Custom":"alpha2","Exposed":"alpha2","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":10,"Hidden":true,"Custom":"alpha3","Exposed":"alpha3","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":11,"Hidden":true,"Custom":"alpha4","Exposed":"alpha4","Value":{"Float":0.003299738047644496},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":12,"Hidden":true,"Custom":"alpha5","Exposed":"alpha5","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":13,"Hidden":true,"Custom":"alpha6","Exposed":"alpha6","Value":{"Float":1.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":14,"Hidden":true,"Custom":"alpha7","Exposed":"alpha7","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":15,"Hidden":true,"Custom":"alpha8","Exposed":"alpha8","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":16,"Hidden":true,"Custom":"mode1","Exposed":"mode1","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":17,"Hidden":true,"Custom":"mode2","Exposed":"mode2","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":18,"Hidden":true,"Custom":"mode3","Exposed":"mode3","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":19,"Hidden":true,"Custom":"mode4","Exposed":"mode4","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":20,"Hidden":true,"Custom":"mode5","Exposed":"mode5","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":21,"Hidden":true,"Custom":"mode6","Exposed":"mode6","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":22,"Hidden":true,"Custom":"mode7","Exposed":"mode7","Value":{"Int":1},"Init":{"Int":1},"Domain":{"Int":{"Values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"Values":[["Add",{"Int":1}],["Average",{"Int":2}],["Color Burn",{"Int":3}],["Color Dodge",{"Int":4}],["Darken",{"Int":5}],["Difference",{"Int":6}],["Exclusion",{"Int":7}],["Glow",{"Int":8}],["Hard Light",{"Int":9}],["Hard Mix",{"Int":10}],["Lighten",{"Int":11}],["Linear Burn",{"Int":12}],["Linear Dodge",{"Int":13}],["Linear Light",{"Int":14}],["Multiply",{"Int":15}],["Negation",{"Int":16}],["Normal",{"Int":17}],["Overlay",{"Int":18}],["Phoenix",{"Int":19}],["Pin Light",{"Int":20}],["Reflect",{"Int":21}],["Screen",{"Int":22}],["Soft Light",{"Int":23}],["Subtract",{"Int":24}],["Vivid Light",{"Int":25}]]}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":6,"Metadata":{"ScriptingName":"ColorGrid","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":7056000000,"Pos":[263.55213030303037,-33.03768999999994],"Size":[92.828125,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"ColorGrid by iq\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.0,\n\t\t\t\"MAX\" : 1.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/4dBSRK\nvoid main(void) \n{\n\tvec2  px = 4.0*(-RENDERSIZE.xy + 2.0*gl_FragCoord.xy)/RENDERSIZE.y;\n\tfloat id = 0.5 + 0.5*cos(TIME + sin(dot(floor(px+0.5),vec2(113.1,17.81)))*43758.545);\n\tvec3 co = 0.5 + 0.5*cos(TIME + 3.5*id + vec3(0.0,1.57,3.14) );\n\tvec2 pa = smoothstep( 0.0, 0.2, id*(0.5 + 0.5*cos(6.2831*px)) );\n\tgl_FragColor = vec4( co*pa.x*pa.y, 1.0 );\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Init":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Init":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Init":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"27d3cc85-a4b0-4924-8fde-71c337b40f59","ObjectName":"gfxProcess","id":10,"Metadata":{"ScriptingName":"Geometry filter","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[61.13622121212131,106.77981000000004],"Size":[131.109375,22.0],"Loops":false,"Script":"/*{\n\"CREDIT\": \"ossia score\",\n\"ISFVSN\": \"2\",\n\"DESCRIPTION\": \"Example geometry effect\",\n\"MODE\": \"GEOMETRY_FILTER\",\n\"CATEGORIES\": [ \"Geometry Effect\", \"Utility\" ],\n\"INPUTS\": [\n  {\n    \"NAME\": \"intensity\",\n    \"TYPE\": \"float\",\n    \"DEFAULT\": 1.,\n    \"MIN\": 0.,\n    \"MAX\": 0.1\n  }\n]\n}*/\n\nvoid process_vertex(inout vec3 position, inout vec3 normal, inout vec2 uv, inout vec3 tangent, inout vec4 color)\n{\n  position.xyz += this_filter.intensity * 10. * sin(TIME * 0.001 * gl_VertexIndex);\n}\n","Inlets":[{"uuid":"f2ab26ea-415d-45a2-bfbc-2968c7c92a33","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"intensity","Exposed":"intensity","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":0.10000000149011612}}}],"Outlets":[{"uuid":"848061c5-e8a0-4a13-9985-e8df30ce6d4f","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":27,"Metadata":{"ScriptingName":"2TweetsChallenge","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":9525600000,"Pos":[187.33889338033077,-337.78050410967177],"Size":[146.609375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"2TweetsChallenge by Nimitz\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.0,\n\t\t\t\"MAX\" : 1.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/4tl3W8\n\nvoid main(void)\n{\n    vec4 p = vec4(gl_FragCoord.xy,0.,1.)/RENDERSIZE.y - vec4(.9,.5,0,0), c=p-p;\n    float t=TIME,r=length(p.xy+=sin(t+sin(t*.8))*.4),a=atan(p.y,p.x);\n    for (float i = 0.;i<60.;i++)\n        c = c*.98 + (sin(i+vec4(5,3,2,1))*.5+.5)*smoothstep(.99, 1., sin(log(r+i*.05)-t-i+sin(a +=t*.01)));\n    gl_FragColor = c*r;\n}\n","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Init":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Init":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Init":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":29,"Metadata":{"ScriptingName":"Color Bars","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[620.2479842894218,728.2444299506109],"Size":[97.4375,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"DESCRIPTION\": \"\",\n\t\"CREDIT\": \"VIDVOX\",\n\t\"ISFVSN\": \"2\",\n\t\"CATEGORIES\": [\n\t\t\"Utility\"\n\t],\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"colorShift\",\n\t\t\t\"LABEL\": \"Color Shift\",\n\t\t\t\"TYPE\": \"float\",\n\t\t\t\"DEFAULT\": 0.0,\n\t\t\t\"MIN\": 0.0,\n\t\t\t\"MAX\": 1.0\n\t\t}\n\t]\n\t\n}*/\n\n\n\n\nvec4 colorsArray[9];\n\n\n\n\nvoid main()\t{\t\n\tvec4\t\toutputPixelColor = vec4(0.0);\n\tvec2\t\tloc = isf_FragNormCoord.xy;\n\t\n\t//\tfigure out if we are in the top, middle or bottom sections\n\t//\tthese are broken into the ratios 3/4, 1/8, 1/8\n\t\n\t//\tif we are in the top section figure out which of the 9 colors to use\n\tif (loc.y > 0.25)\t{\n\t\tcolorsArray[0] = vec4(0.412, 0.412, 0.412, 1.0);\n\t\tcolorsArray[1] = vec4(0.757, 0.757, 0.757, 1.0);\n\t\tcolorsArray[2] = vec4(0.757, 0.757, 0.000, 1.0);\n\t\tcolorsArray[3] = vec4(0.000, 0.757, 0.757, 1.0);\n\t\tcolorsArray[4] = vec4(0.000, 0.757, 0.000, 1.0);\n\t\tcolorsArray[5] = vec4(0.757, 0.000, 0.757, 1.0);\n\t\tcolorsArray[6] = vec4(0.757, 0.000, 0.000, 1.0);\n\t\tcolorsArray[7] = vec4(0.000, 0.000, 0.757, 1.0);\n\t\tcolorsArray[8] = vec4(0.412, 0.412, 0.412, 1.0);\n\t\t\n\t\tint\t\tcolorIndex = int((9.0 * mod(loc.x + colorShift, 1.0)));\n\t\t\n\t\toutputPixelColor = colorsArray[colorIndex];\n\t}\n\t//\tin the 'middle section we draw the black to white image\n\telse if (loc.y > 0.125)\t{\n\t\toutputPixelColor.rgb = vec3(loc.x);\n\t\toutputPixelColor.a = 1.0;\n\t}\n\telse\t{\n\t\tcolorsArray[0] = vec4(0.169, 0.169, 0.169, 1.0);\n\t\tcolorsArray[1] = vec4(0.019, 0.019, 0.019, 1.0);\n\t\tcolorsArray[2] = vec4(1.000, 1.000, 1.000, 1.0);\n\t\tcolorsArray[3] = vec4(1.000, 1.000, 1.000, 1.0);\n\t\tcolorsArray[4] = vec4(0.019, 0.019, 0.019, 1.0);\n\t\tcolorsArray[5] = vec4(0.000, 0.000, 0.000, 1.0);\n\t\tcolorsArray[6] = vec4(0.019, 0.019, 0.019, 1.0);\n\t\tcolorsArray[7] = vec4(0.038, 0.038, 0.038, 1.0);\n\t\tcolorsArray[8] = vec4(0.169, 0.169, 0.169, 1.0);\n\t\t\n\t\tint\t\tcolorIndex = int((9.0 * loc.x));\n\t\t\n\t\toutputPixelColor = colorsArray[colorIndex];\t\t\n\t}\n\t\n\tgl_FragColor = outputPixelColor;\n}\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"colorShift","Exposed":"colorshift","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"1e17e479-3513-44c8-a8a7-017be9f6ac8a","ObjectName":"LFO","id":34,"Metadata":{"ScriptingName":"LFO","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[474.1548646864219,800.7932490773586],"Size":[256.7109375,107.5],"Loops":false,"Inlets":[{"uuid":"5554eb67-bcc8-45ab-8ec2-37a3f191aa64","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Freq.","Exposed":"freq.","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.009999999776482582,"Max":100.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Ampl.","Exposed":"ampl.","Value":{"Float":0.5},"Init":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Offset","Exposed":"offset","Value":{"Float":0.5},"Init":{"Float":0.5},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Jitter","Exposed":"jitter","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Phase","Exposed":"phase","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"8b1d76c4-3838-4ac0-9b9c-c12bc5db8e8a","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"Waveform","Exposed":"waveform","Value":{"String":"Sin"},"Init":{"String":"Sin"},"Domain":{"String":{"Values":["Sin","Triangle","Saw","Square","SampleAndHold","Noise1","Noise2","Noise3"]}},"Values":["Sin","Triangle","Saw","Square","SampleAndHold","Noise1","Noise2","Noise3"],"Pixmaps":[":/icons/wave_sin_off.png",":/icons/wave_sin_on.png",":/icons/wave_triangle_off.png",":/icons/wave_triangle_on.png",":/icons/wave_saw_off.png",":/icons/wave_saw_on.png",":/icons/wave_square_off.png",":/icons/wave_square_on.png",":/icons/wave_sample_and_hold_off.png",":/icons/wave_sample_and_hold_on.png",":/icons/wave_noise1_off.png",":/icons/wave_noise1_on.png",":/icons/wave_noise2_off.png",":/icons/wave_noise2_on.png",":/icons/wave_noise3_off.png",":/icons/wave_noise3_on.png"]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"Quantification","Exposed":"quantification","Value":{"Float":0.25},"Init":{"Float":0.25},"Domain":{"Float":{"Values":[0.0,1.0,0.5,0.25,0.125,0.0625,0.03125,0.015625,0.75,0.375,0.1875,0.09375,0.046875]}},"Values":[["None",{"Float":0.0}],["Whole",{"Float":1.0}],["Half",{"Float":0.5}],["4th",{"Float":0.25}],["8th",{"Float":0.125}],["16th",{"Float":0.0625}],["32th",{"Float":0.03125}],["64th",{"Float":0.015625}],["Dotted Half",{"Float":0.75}],["Dotted 4th",{"Float":0.375}],["Dotted 8th",{"Float":0.1875}],["Dotted 16th",{"Float":0.09375}],["Dotted 32th",{"Float":0.046875}]]}],"Outlets":[{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out"}]},{"uuid":"1e17e479-3513-44c8-a8a7-017be9f6ac8a","ObjectName":"LFO","id":35,"Metadata":{"ScriptingName":"LFO.36","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[1133.154864686422,377.7932490773586],"Size":[256.7109375,107.5],"Loops":false,"Inlets":[{"uuid":"5554eb67-bcc8-45ab-8ec2-37a3f191aa64","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Freq.","Exposed":"freq.","Value":{"Float":0.009999999776482582},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.009999999776482582,"Max":100.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Ampl.","Exposed":"ampl.","Value":{"Float":0.3024691343307495},"Init":{"Float":0.5},"Domain":{"Float":{"Min":0.0,"Max":2.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Offset","Exposed":"offset","Value":{"Float":0.5},"Init":{"Float":0.5},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Jitter","Exposed":"jitter","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"82427d27-084a-4ab6-9c4e-db83929a1200","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"Phase","Exposed":"phase","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"8b1d76c4-3838-4ac0-9b9c-c12bc5db8e8a","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"Waveform","Exposed":"waveform","Value":{"String":"Noise2"},"Init":{"String":"Sin"},"Domain":{"String":{"Values":["Sin","Triangle","Saw","Square","SampleAndHold","Noise1","Noise2","Noise3"]}},"Values":["Sin","Triangle","Saw","Square","SampleAndHold","Noise1","Noise2","Noise3"],"Pixmaps":[":/icons/wave_sin_off.png",":/icons/wave_sin_on.png",":/icons/wave_triangle_off.png",":/icons/wave_triangle_on.png",":/icons/wave_saw_off.png",":/icons/wave_saw_on.png",":/icons/wave_square_off.png",":/icons/wave_square_on.png",":/icons/wave_sample_and_hold_off.png",":/icons/wave_sample_and_hold_on.png",":/icons/wave_noise1_off.png",":/icons/wave_noise1_on.png",":/icons/wave_noise2_off.png",":/icons/wave_noise2_on.png",":/icons/wave_noise3_off.png",":/icons/wave_noise3_on.png"]},{"uuid":"485680cc-b8b9-4a01-acc7-3e8334bdc016","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"Quantification","Exposed":"quantification","Value":{"Float":0.015625},"Init":{"Float":0.25},"Domain":{"Float":{"Values":[0.0,1.0,0.5,0.25,0.125,0.0625,0.03125,0.015625,0.75,0.375,0.1875,0.09375,0.046875]}},"Values":[["None",{"Float":0.0}],["Whole",{"Float":1.0}],["Half",{"Float":0.5}],["4th",{"Float":0.25}],["8th",{"Float":0.125}],["16th",{"Float":0.0625}],["32th",{"Float":0.03125}],["64th",{"Float":0.015625}],["Dotted Half",{"Float":0.75}],["Dotted 4th",{"Float":0.375}],["Dotted 8th",{"Float":0.1875}],["Dotted 16th",{"Float":0.09375}],["Dotted 32th",{"Float":0.046875}]]}],"Outlets":[{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Out","Exposed":"out"}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":36,"Metadata":{"ScriptingName":"Circular.1","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[-40.80201571057819,657.0712490773585],"Size":[91.421875,22.0],"Loops":false,"Vertex":"","Fragment":"/*{\n\t\"CREDIT\" : \"Circular by r1\",\n\t\"CATEGORIES\" : [\n\t\t\"ci\"\n\t],\n\t\"DESCRIPTION\": \"\",\n\t\"INPUTS\": [\n\t\t{\n\t\t\t\"NAME\": \"inputImage\",\n\t\t\t\"TYPE\" : \"image\"\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iZoom\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 0.0,\n\t\t\t\"MAX\" : 1.0,\n\t\t\t\"DEFAULT\" : 1.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iSteps\",\n\t\t\t\"TYPE\" : \"float\",\n\t\t\t\"MIN\" : 2.0,\n\t\t\t\"MAX\" : 75.0,\n\t\t\t\"DEFAULT\" : 19.0\n\t\t},\n\t\t{\n\t\t\t\"NAME\" :\"iMouse\",\n\t\t\t\"TYPE\" : \"point2D\",\n\t\t\t\"DEFAULT\" : [0.0, 0.0],\n\t\t\t\"MAX\" : [640.0, 480.0],\n\t\t\t\"MIN\" : [0.0, 0.0]\n\t\t},\n\t\t{\n\t\t\t\"NAME\": \"iColor\", \n\t\t\t\"TYPE\" : \"color\", \n\t\t\t\"DEFAULT\" : [\n\t\t\t\t0.9, \n\t\t\t\t0.6, \n\t\t\t\t0.0, \n\t\t\t\t1.0\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n// https://www.shadertoy.com/view/XslSRj\nvoid main(void){\n\tfloat d = distance(gl_FragCoord.xy, RENDERSIZE.xy * vec2(0.5,0.5).xy);\n\tfloat x = sin(5.0+0.1*d + TIME*-4.0) * 5.0;\n\tx = clamp( x, 0.0, 1.0 );\n\tgl_FragColor = vec4(x, x, x, 1.0);\n}","Inlets":[{"uuid":"5ac86198-2d03-4830-9e41-a6d529922d29","ObjectName":"Inlet","id":0,"Hidden":false},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"iZoom","Exposed":"izoom","Value":{"Float":0.5833333134651184},"Init":{"Float":1.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"iSteps","Exposed":"isteps","Value":{"Float":19.0},"Init":{"Float":19.0},"Domain":{"Float":{"Min":2.0,"Max":75.0}}},{"uuid":"0adbbdda-fda4-451e-91cc-1da731bde9d5","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"iMouse","Exposed":"imouse","Value":{"Vec2f":[0.0,0.0]},"Init":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[640.0,480.0],"Values":[[],[]]}}},{"uuid":"8f38638e-9f9f-48b0-ae36-1cba86ef5703","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"iColor","Exposed":"icolor","Value":{"Vec4f":[0.38699930906295776,0.9000076055526733,0.8384527564048767,1.0]},"Init":{"Vec4f":[0.8999999761581421,0.6000000238418579,0.0,1.0]},"Domain":{}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":37,"Metadata":{"ScriptingName":"Circle Oscillation","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[561.1979842894218,955.0712490773584],"Size":[139.25,22.0],"Loops":false,"Vertex":"void main() {\n\tisf_vertShaderInit();\n}","Fragment":"/*\n{\n    \"CATEGORIES\": [\n        \"Automatically Converted\",\n        \"GrandC Viz\"\n    ],\n    \"DESCRIPTION\": \"  Trip Chess Patten\",\n    \"IMPORTED\": {\n    },\n    \"INPUTS\": [\n    {\n        \"LABEL\":\"Speed\",\n        \"MIN\": 1,\n        \"MAX\": 4,\n        \"DEFAULT\": 1,\n        \"TYPE\": \"float\",\n        \"NAME\": \"Speed\"\n    },\n    {\n        \"LABEL\":\"Blur\",\n        \"MIN\": 0.1,\n        \"MAX\": 1,\n        \"DEFAULT\": 0.7,\n        \"TYPE\": \"float\",\n        \"NAME\": \"Blur\"\n    },\n    {\n        \"LABEL\":\"Angle\",\n        \"MIN\": 0.0,\n        \"MAX\": 6.28319,\n        \"DEFAULT\": 0.78,\n        \"TYPE\": \"float\",\n        \"NAME\": \"Angle\"\n    },\n    {\n        \"LABEL\":\"Zoom\",\n        \"MIN\": 1,\n        \"MAX\": 30,\n        \"DEFAULT\": 15,\n        \"TYPE\": \"float\",\n        \"NAME\": \"Zoom\"\n    }\n    ]\n}\n\n*/\n\n\nfloat Xor(float a, float b){\n    return a*(1.0 -b) + b*(1.0 -a);\n    }\n\nvoid main() {\n\n\n\n    \n    vec2 uv = (gl_FragCoord.xy-0.5*RENDERSIZE.xy)/RENDERSIZE.y;\n    \n    vec3 col = vec3(0);\n    \n    \n    float a = Angle;\n    float s = sin(a);\n    float c = cos(a);\n    uv *= mat2(c, -s, s, c);\n    \n    \n    uv *=Zoom;\n    \n    vec2 gv = fract ( uv )-0.5;\n    vec2 id = floor(uv);\n    \n    float m = 0.;\n    \n    float t = TIME*Speed;\n    \n    \n    for(float y =-1.; y <=1.0; y++){\n        for(float x =-1.; x <=1.0; x++){\n            vec2 offs = vec2(x, y);\n            \n            float d = length(gv-offs);\n            \n            float dist = length(id+offs)*.3;\n            \n            float r = mix(0.3, 1.5, sin(dist-t)*0.5+0.5);\n            \n            m = Xor(m, smoothstep(r,r*Blur,d));\n           \n            }\n        }\n    //col.rg = gv;\n    \n    col += m;\n    \n    gl_FragColor = vec4(col,1.0);\n}\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Speed","Exposed":"speed","Value":{"Float":1.0},"Init":{"Float":1.0},"Domain":{"Float":{"Min":1.0,"Max":4.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"Blur","Exposed":"blur","Value":{"Float":0.9399999976158142},"Init":{"Float":0.699999988079071},"Domain":{"Float":{"Min":0.10000000149011612,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"Angle","Exposed":"angle","Value":{"Float":0.7799999713897705},"Init":{"Float":0.7799999713897705},"Domain":{"Float":{"Min":0.0,"Max":6.28318977355957}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"Zoom","Exposed":"zoom","Value":{"Float":30.0},"Init":{"Float":15.0},"Domain":{"Float":{"Min":1.0,"Max":30.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"74ca45ff-92c9-44a0-8f1a-754dea05ee1b","ObjectName":"gfxProcess","id":38,"Metadata":{"ScriptingName":"triangles-dongo","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[803.1979842894218,719.0712490773585],"Size":[132.09375,22.0],"Loops":false,"Vertex":"\nvoid main() {\n  isf_vertShaderInit();\n}\n","Fragment":"/*{\n  \"DESCRIPTION\": \"Glowing triangle with adjustable pulse speed, continuous rotation, number of clones, kaleidoscope tie-dye background, line thickness, background rotation speed, stop and reverse rotation, and in/out animation for each triangle with audio-reactive background color inversion\",\n  \"CATEGORIES\": [ \"graphics\", \"geometry\" ],\n  \"INPUTS\": [\n    {\n      \"NAME\": \"pulseSpeed\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 3.0,\n      \"MIN\": 0.1,\n      \"MAX\": 10.0,\n      \"LABEL\": \"Pulse Speed (Seconds)\"\n    },\n    {\n      \"NAME\": \"rotationSpeed\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 30.0,\n      \"MIN\": 1.0,\n      \"MAX\": 180.0,\n      \"LABEL\": \"Rotation Speed (Degrees/Second)\"\n    },\n    {\n      \"NAME\": \"rotationDirection\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 1.0,\n      \"MIN\": -1.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Rotation Direction (1=Clockwise, -1=Counterclockwise)\"\n    },\n    {\n      \"NAME\": \"stopRotation\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.0,\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Stop Rotation (0=Resume, 1=Stop)\"\n    },\n    {\n      \"NAME\": \"numClones\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 20.0,\n      \"MIN\": 1.0,\n      \"MAX\": 20.0,\n      \"LABEL\": \"Number of Clones\"\n    },\n    {\n      \"NAME\": \"lineThickness\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.02,\n      \"MIN\": 0.01,\n      \"MAX\": 0.1,\n      \"LABEL\": \"Line Thickness\"\n    },\n    {\n      \"NAME\": \"bgRotationSpeed\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.3,\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Background Rotation Speed\"\n    },\n    {\n      \"NAME\": \"numKaleidoscopeMirrors\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 6.0,\n      \"MIN\": 1.0,\n      \"MAX\": 12.0,\n      \"LABEL\": \"Kaleidoscope Mirrors\"\n    },\n    {\n      \"NAME\": \"audio\",\n      \"TYPE\": \"float\",\n      \"DEFAULT\": 0.0,\n      \"MIN\": 0.0,\n      \"MAX\": 1.0,\n      \"LABEL\": \"Audio Input\"\n    }\n  ]\n}*/\n\nfloat triangleOutline(vec2 p, float thickness) {\n    const float sqrt3 = 1.73205;\n\n    // Scale down for visibility\n    float size = 0.4;\n    p /= size;\n\n    // Signed distance function for equilateral triangle\n    p.x = abs(p.x) - 1.0;\n    p.y += 1.0 / sqrt3;\n\n    if (p.x + sqrt3 * p.y > 0.0) {\n        p = vec2(p.x - sqrt3 * p.y, -sqrt3 * p.x - p.y) / 2.0;\n    }\n\n    p.x -= clamp(p.x, -2.0, 0.0);\n\n    // Adjusting the edge sharpness: controlling the distance and applying thickness directly\n    float dist = length(p) * sign(p.y);\n    return dist;\n}\n\nvec3 kaleidoscopeBackground(vec2 uv, float rotationSpeed, float numMirrors, float audio) {\n    // Rotate the UV coordinates to create kaleidoscope effect\n    vec2 center = vec2(0.5); // Center of the image\n    uv -= center;\n\n    // Determine angle per mirror segment\n    float angleStep = 3.14159 * 2.0 / numMirrors;\n\n    // Create symmetrical reflection-based kaleidoscope\n    vec2 uvRotated = uv;\n    vec3 kaleidoscopeColor = vec3(0.0);\n\n    for (int i = 0; i < 12; i++) {  // We can use a constant loop count (like 12) for kaleidoscope reflections\n        float angle = float(i) * angleStep;\n        mat2 rotation = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n        uvRotated = rotation * uv;\n\n        // Apply a tie-dye color pattern with time-based animation\n        float r = 0.5 + 0.5 * sin(uvRotated.x * 5.0 + TIME * 0.3);\n        float g = 0.5 + 0.5 * sin(uvRotated.y * 5.0 + TIME * 0.5);\n        float b = 0.5 + 0.5 * sin(uvRotated.x * 5.0 + TIME * 0.7);\n\n        // Blend the colors to create kaleidoscopic symmetry\n        kaleidoscopeColor += vec3(r, g, b);\n    }\n\n    // Normalize the kaleidoscope effect to avoid excess brightness\n    kaleidoscopeColor /= 12.0;\n\n    // Apply audio-reactive inversion effect\n    float invertFactor = audio; // Use audio input to determine the inversion effect (0 = no inversion, 1 = full inversion)\n    kaleidoscopeColor = mix(kaleidoscopeColor, vec3(1.0) - kaleidoscopeColor, invertFactor);\n\n    return kaleidoscopeColor;\n}\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / RENDERSIZE.xy;\n    vec2 p = (uv - 0.5) * 2.0;\n\n    // Adjust for aspect ratio first (before rotation)\n    p.x *= RENDERSIZE.x / RENDERSIZE.y;\n\n    // If the stopRotation toggle is 1, stop the rotation by setting speed to 0\n    float actualRotationSpeed = stopRotation == 1.0 ? 0.0 : rotationSpeed;\n\n    // Calculate continuous rotation using TIME and rotationDirection\n    float angle = radians(TIME * actualRotationSpeed * rotationDirection);  // Multiply time by rotation speed\n    float s = sin(angle);\n    float c = cos(angle);\n\n    // Apply rotation to the adjusted coordinates\n    p = mat2(c, -s, s, c) * p;\n\n    // Create kaleidoscope background effect with audio-reactive inversion\n    vec3 bgColor = kaleidoscopeBackground(uv, bgRotationSpeed, numKaleidoscopeMirrors, audio);\n    \n    // Initialize the final color\n    vec3 finalColor = vec3(0.0);  // Start with a black background\n\n    // Create triangles with line thickness\n    float thickness = lineThickness;\n\n    // Loop through the clones and apply independent movement to each\n    for (int i = 0; i < 20; i++) {  // Max 20 clones\n        if (i >= int(floor(numClones))) break;  // Stop drawing more clones than selected\n\n        // Calculate angle offset for circular positioning\n        float angleOffset = float(i) * 2.0 * 3.14159 / float(numClones);  // Angular offset for clones\n        vec2 offset = vec2(cos(angleOffset), sin(angleOffset)) * 0.5;  // Circular offset\n        vec2 pWithOffset = p + offset;\n\n        // Add independent pulse for each clone (in and out animation)\n        float pulse = 0.5 + 0.5 * sin(TIME * pulseSpeed + float(i) * 0.2);  // Add different phase for each clone\n\n        // Scale each triangle based on its own pulse value\n        pWithOffset *= pulse;  // Apply individual scaling to the triangle's position\n\n        // Calculate the distance to the outline of the triangle\n        float dist = triangleOutline(pWithOffset, thickness);\n\n        // Apply the glowing effect and color for each triangle\n        finalColor += vec3(1.0, 0.8, 0.3) * smoothstep(thickness, 0.0, abs(dist));  // Glowing edges\n    }\n\n    // Blend background and triangle colors\n    finalColor = mix(bgColor, finalColor, 0.5);  // Combine background and triangles\n\n    // Set the final output color\n    gl_FragColor = vec4(finalColor, 1.0);\n}\n","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"pulseSpeed","Exposed":"pulsespeed","Value":{"Float":2.1086955070495605},"Init":{"Float":3.0},"Domain":{"Float":{"Min":0.10000000149011612,"Max":10.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":1,"Hidden":true,"Custom":"rotationSpeed","Exposed":"rotationspeed","Value":{"Float":148.86956787109375},"Init":{"Float":30.0},"Domain":{"Float":{"Min":1.0,"Max":180.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":2,"Hidden":true,"Custom":"rotationDirection","Exposed":"rotationdirection","Value":{"Float":0.24637681245803833},"Init":{"Float":1.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":3,"Hidden":true,"Custom":"stopRotation","Exposed":"stoprotation","Value":{"Float":0.4202898442745209},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":4,"Hidden":true,"Custom":"numClones","Exposed":"numclones","Value":{"Float":14.492753982543945},"Init":{"Float":20.0},"Domain":{"Float":{"Min":1.0,"Max":20.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":5,"Hidden":true,"Custom":"lineThickness","Exposed":"linethickness","Value":{"Float":0.08304347842931747},"Init":{"Float":0.019999999552965164},"Domain":{"Float":{"Min":0.009999999776482582,"Max":0.10000000149011612}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":6,"Hidden":true,"Custom":"bgRotationSpeed","Exposed":"bgrotationspeed","Value":{"Float":0.30000001192092896},"Init":{"Float":0.30000001192092896},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":7,"Hidden":true,"Custom":"numKaleidoscopeMirrors","Exposed":"numkaleidoscopemirrors","Value":{"Float":9.608695983886719},"Init":{"Float":6.0},"Domain":{"Float":{"Min":1.0,"Max":12.0}}},{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":8,"Hidden":true,"Custom":"audio","Exposed":"audio","Value":{"Float":0.0},"Init":{"Float":0.0},"Domain":{"Float":{"Min":0.0,"Max":1.0}}}],"Outlets":[{"uuid":"f1c71046-b754-49a5-8e66-d01374773dfc","ObjectName":"Outlet","id":1,"Hidden":false}]},{"uuid":"c953fa55-65f0-4b93-8bfc-54780250d2b8","ObjectName":"Step","id":42,"Metadata":{"ScriptingName":"Step sequencer","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[1372.9425535454025,-241.66753005333348],"Size":[200.0,100.0],"Loops":false,"Outlet":{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Value out","Exposed":"value out"},"Steps":[0.5,0.30000001192092896,0.5,0.800000011920929,1.0,0.0,0.5,0.10000000149011612],"StepCount":8,"StepDur":20000,"StepMin":-1.0,"StepMax":1.0},{"uuid":"c953fa55-65f0-4b93-8bfc-54780250d2b8","ObjectName":"Step","id":43,"Metadata":{"ScriptingName":"Step sequencer.44","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[1401.7425535454024,-230.14753005333347],"Size":[200.0,100.0],"Loops":false,"Outlet":{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Value out","Exposed":"value out"},"Steps":[0.5,0.30000001192092896,0.5,0.800000011920929,1.0,0.0,0.5,0.10000000149011612],"StepCount":8,"StepDur":20000,"StepMin":-1.0,"StepMax":1.0},{"uuid":"c953fa55-65f0-4b93-8bfc-54780250d2b8","ObjectName":"Step","id":44,"Metadata":{"ScriptingName":"Step sequencer.46","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[1387.3425535454023,-253.1875300533335],"Size":[200.0,100.0],"Loops":false,"Outlet":{"uuid":"cff96158-cc72-46d7-99dc-b6038171375b","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Value out","Exposed":"value out"},"Steps":[0.5,0.30000001192092896,0.5,0.800000011920929,1.0,0.0,0.5,0.10000000149011612],"StepCount":8,"StepDur":20000,"StepMin":-1.0,"StepMax":1.0},{"uuid":"846a5de5-47f9-46c5-a898-013cb20951d0","ObjectName":"Javascript","id":45,"Metadata":{"ScriptingName":"sine","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Duration":15473347827,"Height":300.0,"StartOffset":0,"LoopDuration":15473347827,"Pos":[1178.5425535454024,-240.22753005333348],"Size":[75.0,22.0],"Loops":false,"Script":"import Score 1.0\n\nScript {\n  // Declare our inputs & outputs\n  FloatSlider { id: in1; min: 20; max: 800; init: 440; objectName: \"Frequency\" }\n  AudioOutlet { id: out1 }\n  \n  // Index to keep track of the phase\n  property real phase: 0;\n\n  tick: function(token, state) {\n    // Create an array to store our samples\n    let arr = new Array(state.buffer_size);\n    for (let i = 0; i < state.buffer_size; ++i)\n      arr[i] = 0;\n\n    // How many samples we must write in this array\n    // (the process could run for e.g. only frame 17 through 24 in a 128-frame buffer)\n    const tm = state.timings(token);\n    \n    if(tm.length > 0) {\n      // Computer the sin() coefficient\n      const freq = in1.value;\n\n      // Notice how we get sample_rate from state.\n      const phi = 2 * Math.PI * freq / state.sample_rate;\n\n      // Fill our array\n      for(var s = 0; s < tm.length; s++) {\n        const sample = freq > 0 ? Math.sin(phase) : 0;\n        arr[tm.start_sample + s] = 0.3 * sample;\n        phase += phi;\n      }\n    }\n\n    // Write two audio channels, which will give stereo output by default in score.\n    out1.setChannel(0, arr);\n    out1.setChannel(1, arr);\n  }\n}","Inlets":[{"uuid":"af2b4fc3-aecb-4c15-a5aa-1c573a239925","ObjectName":"Inlet","id":0,"Hidden":true,"Custom":"Frequency","Exposed":"frequency","Value":{"Float":440.0},"Init":{"Float":440.0},"Domain":{"Float":{"Min":20.0,"Max":800.0}}}],"Outlets":[{"uuid":"a1d97535-18ac-444a-8417-0cbc1692d897","ObjectName":"Outlet","id":0,"Hidden":false,"Custom":"Audio out","Exposed":"audio out","GainInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10000,"Hidden":false,"Custom":"Gain","Exposed":"gain","Value":{},"Init":{},"Domain":{"Float":{"Min":0.0,"Max":1.0}}},"PanInlet":{"uuid":"9a13fb32-269a-47bf-99a9-930188c1f19c","ObjectName":"Inlet","id":10001,"Hidden":false,"Custom":"Pan","Exposed":"pan","Value":{},"Init":{},"Domain":{}},"Gain":1.0,"Pan":[1.0,1.0],"Propagate":true}]}],"SmallViewRack":[{"Processes":[1,6,10,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,45],"Process":null,"Height":1225.0,"Nodal":true},{"Processes":[42],"Process":42,"Height":200.0,"Nodal":false},{"Processes":[43],"Process":43,"Height":200.0,"Nodal":false},{"Processes":[44],"Process":44,"Height":200.0,"Nodal":false}],"FullViewRack":[{"Process":0,"Nodal":true},{"Process":42,"Nodal":false},{"Process":43,"Nodal":false},{"Process":44,"Nodal":false}],"DefaultDuration":15473347827,"MinDuration":15473347827,"MaxDuration":15473347827,"GuiDuration":16386537392,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"Signatures":[],"StartState":1,"EndState":2,"StartDate":547644552,"HeightPercentage":0.19466666666666663,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":-1.0,"Center":0,"NodalOffset":[-525.0,227.0],"ViewMode":0,"SmallViewShown":true,"HasSignature":false},{"ObjectName":"Scenario::IntervalModel","id":3,"Metadata":{"ScriptingName":"Interval.whim28","Comment":"","Color":"Transparent1","Label":"","Touched":true},"Graphal":true,"DefaultDuration":0,"MinDuration":0,"MaxDuration":0,"GuiDuration":0,"Speed":1.0,"Rigidity":true,"MinNull":false,"MaxInf":false,"StartState":5,"EndState":4,"StartDate":16020992379,"HeightPercentage":0.07466666666666667}],"Comments":[]}],"SmallViewRack":[],"FullViewRack":[{"Process":1,"Nodal":false}],"DefaultDuration":10584000000,"MinDuration":10584000000,"MaxDuration":11113200000,"GuiDuration":18496437131,"Speed":1.0,"Rigidity":false,"MinNull":false,"MaxInf":true,"Signatures":[[0,[4,4]]],"StartState":0,"EndState":1,"StartDate":0,"HeightPercentage":0.0,"NodalSlotHeight":100.0,"QuantizationRate":-1.0,"Zoom":17802153.15784408,"Center":9239317488,"ViewMode":0,"SmallViewShown":false,"HasSignature":true},"StartTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":0,"Metadata":{"ScriptingName":"Sync.start","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":0,"Events":[0],"MusicalSync":-1.0,"AutoTrigger":false,"Start":true,"Active":false,"Expression":" { true == false } "},"EndTimeNode":{"ObjectName":"Scenario::TimeSyncModel","id":1,"Metadata":{"ScriptingName":"Sync.end","Comment":"","Color":"Gray","Label":"","Touched":true},"Date":10584000000,"Events":[1],"MusicalSync":-1.0,"AutoTrigger":false,"Start":false,"Active":true,"Expression":" { true == false } "},"StartEvent":{"ObjectName":"Scenario::EventModel","id":0,"Metadata":{"ScriptingName":"Event.start","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":0,"States":[0],"Condition":"","Date":0,"Offset":0},"EndEvent":{"ObjectName":"Scenario::EventModel","id":1,"Metadata":{"ScriptingName":"Event.end","Comment":"","Color":"Emphasis4","Label":"","Touched":true},"TimeNode":1,"States":[1],"Condition":"","Date":10584000000,"Offset":0},"StartState":{"ObjectName":"Scenario::StateModel","id":0,"Metadata":{"ScriptingName":"State.start","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":0,"PreviousConstraint":null,"NextConstraint":0,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]},"EndState":{"ObjectName":"Scenario::StateModel","id":1,"Metadata":{"ScriptingName":"State.end","Comment":"","Color":"Base1","Label":"","Touched":true},"Event":1,"PreviousConstraint":0,"NextConstraint":null,"HeightPercentage":0.0,"Messages":{"Name":"","Accessors":[],"Unit":"none","Previous":[],"Following":[],"User":null,"Priorities":[1,2,0]},"Controls":[],"StateProcesses":[]}},"Speed":1.0,"Cables":[{"ObjectName":"Process::Cable","id":38,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":38},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":4}]},{"ObjectName":"Process::Cable","id":9,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":18},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":26,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":32},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":19},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":11,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":20},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":32,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":30},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":13,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":6},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":1}]},{"ObjectName":"Process::Cable","id":14,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":21},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":15,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":22},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":34,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":32},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":17,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":24},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":5}]},{"ObjectName":"Process::Cable","id":18,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":25},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":6}]},{"ObjectName":"Process::Cable","id":19,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":27},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":7}]},{"ObjectName":"Process::Cable","id":20,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":28},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":18},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":33,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":29},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":2}]},{"ObjectName":"Process::Cable","id":39,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":39},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":5}]},{"ObjectName":"Process::Cable","id":31,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":0}]},{"ObjectName":"Process::Cable","id":36,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":37},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":33},{"ObjectName":"Inlet","ObjectId":3}]},{"ObjectName":"Process::Cable","id":37,"Type":0,"Source":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":23},{"ObjectName":"Outlet","ObjectId":1}],"Sink":[{"ObjectName":"Scenario::ScenarioDocumentModel","ObjectId":1},{"ObjectName":"Scenario::BaseScenario","ObjectId":0},{"ObjectName":"Scenario::IntervalModel","ObjectId":0},{"ObjectName":"Scenario","ObjectId":1},{"ObjectName":"Scenario::IntervalModel","ObjectId":2},{"ObjectName":"gfxProcess","ObjectId":1},{"ObjectName":"Inlet","ObjectId":4}]}],"BusIntervals":[]},"Plugins":[{"uuid":"1f923578-08c3-49be-9ba9-69c144ee2e32","Refresh":false,"Reconnect":false,"MidiRatio":1.0},{"uuid":"6e610e1f-9de2-4c36-90dd-0ef570002a21","RootNode":{},"Children":[{"Device":{"Name":"Window","Protocol":"5a181207-7d40-4ad8-814e-879fcdf8cc31"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"String":""},"Domain":{"String":{}},"Name":"screen"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[2995.0,474.0]},"Domain":{},"Name":"position"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"cursor"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[197.0,7.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1280.0,720.0],"Values":[[],[]]}},"Name":"absolute"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Bool":false},"Domain":{},"Name":"visible"}}]},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"tablet"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Float":{"Min":0.0,"Max":1.0}},"Name":"scaled"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.0,0.0]},"Domain":{"Vec2f":{"Min":[0.0,0.0],"Max":[1280.0,720.0],"Values":[[],[]]}},"Name":"absolute"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"z"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{},"Name":"pressure"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-1.0,"Max":1.0}},"Name":"tangential"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-180.0,"Max":180.0}},"Name":"rotation"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_x"}},{"Address":{"ioType":"<->","ClipMode":"Free","Unit":"angle.degree","RepetitionFilter":false,"Value":{"Float":0.0},"Domain":{"Float":{"Min":-60.0,"Max":60.0}},"Name":"tilt_y"}}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[1280.0,720.0]},"Domain":{},"Name":"size"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[1280.0,720.0]},"Domain":{},"Extended":{"description":"Set to [0, 0] to use the viewport's size"},"Name":"rendersize"}},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"key"},"Children":[{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"press"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"code"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"String":""},"Domain":{},"Name":"text"}}]},{"Address":{"ClipMode":"Free","RepetitionFilter":false,"Value":{},"Domain":{},"Name":"release"},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Int":0},"Domain":{},"Name":"code"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"String":""},"Domain":{},"Name":"text"}}]}]},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Bool":false},"Domain":{},"Name":"fullscreen"}}]},{"Device":{"Name":"lightwarrior","Protocol":"9a42de4b-f6eb-4bca-9564-01b975f601b9","Config":{"Mode":1,"Version":0,"Framing":1,"Bundle":0,"Transport":{"UDP":{"Local":{"Bind":"0.0.0.0","Port":9997},"Remote":{"Host":"127.0.0.1","Port":9996,"Broadcast":false}}}},"Bonjour":true},"Children":[{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.30047181248664856,0.24670398235321045]},"Domain":{},"Name":"start30"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.36472564935684204,0.24530085921287537]},"Domain":{},"Name":"end30"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5123801231384277,0.6826839447021484]},"Domain":{},"Name":"start0"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.33614763617515564,0.7232658863067627]},"Domain":{},"Name":"end0"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5737608671188354,0.6308937668800354]},"Domain":{},"Name":"start1"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.7120382189750671,0.7627475261688232]},"Domain":{},"Name":"end1"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.7786372303962708,0.6863259673118591]},"Domain":{},"Name":"start2"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.9404063820838928,0.5555698871612549]},"Domain":{},"Name":"end2"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.2984592318534851,0.2147146314382553]},"Domain":{},"Name":"start3"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.4867470860481262,0.2147146314382553]},"Domain":{},"Name":"end3"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.35906288027763367,0.7123407125473022]},"Domain":{},"Name":"start4"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.27099329233169556,0.10411699116230011]},"Domain":{},"Name":"end4"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.33009639382362366,0.6917890906333923]},"Domain":{},"Name":"start5"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.15347905457019806,0.7266854047775269]},"Domain":{},"Name":"end5"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.6486486792564392,0.595504641532898]},"Domain":{},"Name":"start6"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.510162353515625,0.7934722900390625]},"Domain":{},"Name":"end6"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.2995615005493164,0.1950971633195877]},"Domain":{},"Name":"start7"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.4878493547439575,0.1950971633195877]},"Domain":{},"Name":"end7"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5063329339027405,0.7420889735221863]},"Domain":{},"Name":"start8"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.31813621520996094,0.7316735982894897]},"Domain":{},"Name":"end8"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.34136122465133667,0.6917890906333923]},"Domain":{},"Name":"start9"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.20789101719856262,0.48321637511253357]},"Domain":{},"Name":"end9"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5211739540100098,0.7006682753562927]},"Domain":{},"Name":"start10"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.35057151317596436,0.7609769701957703]},"Domain":{},"Name":"end10"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5819059014320374,0.6570711135864258]},"Domain":{},"Name":"start11"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.42602774500846863,0.8087654709815979]},"Domain":{},"Name":"end11"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.6672540903091431,0.7120320796966553]},"Domain":{},"Name":"start12"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8513566255569458,0.7227658033370972]},"Domain":{},"Name":"end12"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.47346562147140503,0.7227466106414795]},"Domain":{},"Name":"start13"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.31949958205223083,0.5650012493133545]},"Domain":{},"Name":"end13"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.6070674061775208,0.6391658782958984]},"Domain":{},"Name":"start14"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.7805550694465637,0.7075815796852112]},"Domain":{},"Name":"end14"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.29619327187538147,0.17149761319160461]},"Domain":{},"Name":"start15"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.48448115587234497,0.17149761319160461]},"Domain":{},"Name":"end15"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.7264482975006104,0.7537724375724792]},"Domain":{},"Name":"start16"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.9214022755622864,0.6684626936912537]},"Domain":{},"Name":"end16"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5083233118057251,0.755126953125]},"Domain":{},"Name":"start17"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.6835609078407288,0.7026668190956116]},"Domain":{},"Name":"end17"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5368421077728271,0.7932916283607483]},"Domain":{},"Name":"start18"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5368421077728271,0.7932916283607483]},"Domain":{},"Name":"end18"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.48804083466529846,0.0810268372297287]},"Domain":{},"Name":"start19"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.29975295066833496,0.0810268372297287]},"Domain":{},"Name":"end19"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5426161289215088,0.7526549696922302]},"Domain":{},"Name":"start20"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5426161289215088,0.7526549696922302]},"Domain":{},"Name":"end20"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.5912106037139893,0.7172434329986572]},"Domain":{},"Name":"start21"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.7465599179267883,0.6227377653121948]},"Domain":{},"Name":"end21"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8410072326660156,0.07979435473680496]},"Domain":{},"Name":"start22"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8877665996551514,0.08189748227596283]},"Domain":{},"Name":"end22"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8398234248161316,0.1050318256020546]},"Domain":{},"Name":"start23"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8865649700164795,0.10814589262008667]},"Domain":{},"Name":"end23"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8398234248161316,0.13132086396217346]},"Domain":{},"Name":"start24"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8865792751312256,0.13366077840328217]},"Domain":{},"Name":"end24"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8427818417549133,0.15655653178691864]},"Domain":{},"Name":"start25"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8889493942260742,0.15655653178691864]},"Domain":{},"Name":"end25"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8445555567741394,0.17758424580097198]},"Domain":{},"Name":"start26"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8895393013954163,0.17758424580097198]},"Domain":{},"Name":"end26"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8380477428436279,0.20282703638076782]},"Domain":{},"Name":"start27"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.8848221302032471,0.20282703638076782]},"Domain":{},"Name":"end27"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.29618504643440247,0.14636197686195374]},"Domain":{},"Name":"start28"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.48447293043136597,0.14636197686195374]},"Domain":{},"Name":"end28"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.2977127134799957,0.11214613914489746]},"Domain":{},"Name":"start29"}},{"Address":{"ioType":"<->","ClipMode":"Free","RepetitionFilter":false,"Value":{"Vec2f":[0.6173077821731567,0.11214613914489746]},"Domain":{},"Name":"end29"}}]},{"Device":{"Name":"Shmdata Output","Protocol":"69bb8215-dae2-4ec9-b60c-79f4f4fc2390","Path":"/tmp/score_shm_video","Width":1280,"Height":720,"Rate":30.0}}]}],"Version":4,"Commit":"c85cc53423f3df98ac8be99168a8727355381ddf","Tag":"3.4.1"}